ARM GAS  /tmp/cchgnHfm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.4.1 20160919 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -imultilib armv6-m
  18              	@ -iprefix /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/
  19              	@ -isysroot /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../arm-none-eabi
  20              	@ -MD code/main.d -MF .dep/main.o.d -MP -MQ code/main.o -D__USES_INITFINI__
  21              	@ -D RUN_FROM_FLASH=1 code/main.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip code/main.o -gdwarf-2 -O0 -Wall -Wstrict-prototypes
  23              	@ -fomit-frame-pointer -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  30              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
  31              	@ -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  32              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  33              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  34              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings
  35              	@ -fomit-frame-pointer -fpeephole -fprefetch-loop-arrays
  36              	@ -freg-struct-return -fsched-critical-path-heuristic
  37              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  38              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  39              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  40              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  41              	@ -fsplit-ivs-in-unroller -fstdarg-opt -fstrict-volatile-bitfields
  42              	@ -fsync-libcalls -ftrapping-math -ftree-coalesce-vars -ftree-cselim
  43              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  44              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  45              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  46              	@ -fzero-initialized-in-bss -mlittle-endian -mpic-data-is-text-relative
  47              	@ -msched-prolog -mthumb -mvectorize-with-neon-quad
  48              	
  49              		.text
  50              	.Ltext0:
  51              		.cfi_sections	.debug_frame
  52              		.global	SW_REGS
  53              		.data
  54              		.align	2
  55              		.type	SW_REGS, %object
  56              		.size	SW_REGS, 4
  57              	SW_REGS:
ARM GAS  /tmp/cchgnHfm.s 			page 2


  58 0000 00000040 		.word	1073741824
  59              		.global	OUT_REGS
  60              		.align	2
  61              		.type	OUT_REGS, %object
  62              		.size	OUT_REGS, 4
  63              	OUT_REGS:
  64 0004 00000050 		.word	1342177280
  65              		.text
  66              		.align	2
  67              		.global	write_out_0
  68              		.code	16
  69              		.thumb_func
  70              		.type	write_out_0, %function
  71              	write_out_0:
  72              	.LFB0:
  73              		.file 1 "code/main.c"
   1:code/main.c   **** #define __MAIN_C__
   2:code/main.c   **** 
   3:code/main.c   **** #include <stdint.h>
   4:code/main.c   **** #include <stdbool.h>
   5:code/main.c   **** 
   6:code/main.c   **** // Define the raw base address values for the i/o devices
   7:code/main.c   **** 
   8:code/main.c   **** #define AHB_SW_BASE                             0x40000000
   9:code/main.c   **** #define AHB_OUT_BASE                            0x50000000
  10:code/main.c   **** 
  11:code/main.c   **** // Define pointers with correct type for access to 32-bit i/o devices
  12:code/main.c   **** //
  13:code/main.c   **** // The locations in the devices can then be accessed as:
  14:code/main.c   **** //    SW_REGS[0]
  15:code/main.c   **** //    SW_REGS[1]
  16:code/main.c   **** //    SW_REGS[2]
  17:code/main.c   **** //    OUT_REGS[0]
  18:code/main.c   **** //    OUT_REGS[1]
  19:code/main.c   **** //
  20:code/main.c   **** volatile uint32_t* SW_REGS = (volatile uint32_t*) AHB_SW_BASE;
  21:code/main.c   **** volatile uint32_t* OUT_REGS = (volatile uint32_t*) AHB_OUT_BASE;
  22:code/main.c   **** 
  23:code/main.c   **** #include <stdint.h>
  24:code/main.c   **** 
  25:code/main.c   **** //////////////////////////////////////////////////////////////////
  26:code/main.c   **** // Functions provided to access i/o devices
  27:code/main.c   **** //////////////////////////////////////////////////////////////////
  28:code/main.c   **** 
  29:code/main.c   **** void write_out_0(uint32_t value_0) {
  74              		.loc 1 29 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 82B0     		sub	sp, sp, #8	@,,
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 8
  82 0002 0190     		str	r0, [sp, #4]	@ value_0, value_0
  30:code/main.c   **** 
  31:code/main.c   ****   OUT_REGS[0] = value_0;
  83              		.loc 1 31 0
ARM GAS  /tmp/cchgnHfm.s 			page 3


  84 0004 034B     		ldr	r3, .L2	@ tmp111,
  85 0006 1B68     		ldr	r3, [r3]	@ D.4300, OUT_REGS
  86 0008 019A     		ldr	r2, [sp, #4]	@ tmp112, value_0
  87 000a 1A60     		str	r2, [r3]	@ tmp112, *_2
  32:code/main.c   **** 
  33:code/main.c   **** }
  88              		.loc 1 33 0
  89 000c C046     		nop
  90 000e 02B0     		add	sp, sp, #8	@,,
  91              		@ sp needed	@
  92 0010 7047     		bx	lr
  93              	.L3:
  94 0012 C046     		.align	2
  95              	.L2:
  96 0014 00000000 		.word	OUT_REGS
  97              		.cfi_endproc
  98              	.LFE0:
  99              		.size	write_out_0, .-write_out_0
 100              		.align	2
 101              		.global	write_out_1
 102              		.code	16
 103              		.thumb_func
 104              		.type	write_out_1, %function
 105              	write_out_1:
 106              	.LFB1:
  34:code/main.c   **** void write_out_1(uint32_t value_1) {
 107              		.loc 1 34 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112 0018 82B0     		sub	sp, sp, #8	@,,
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115 001a 0190     		str	r0, [sp, #4]	@ value_1, value_1
  35:code/main.c   **** 
  36:code/main.c   ****   OUT_REGS[1] = value_1;
 116              		.loc 1 36 0
 117 001c 034B     		ldr	r3, .L5	@ tmp112,
 118 001e 1B68     		ldr	r3, [r3]	@ D.4301, OUT_REGS
 119 0020 0433     		adds	r3, r3, #4	@ D.4301,
 120 0022 019A     		ldr	r2, [sp, #4]	@ tmp113, value_1
 121 0024 1A60     		str	r2, [r3]	@ tmp113, *_3
  37:code/main.c   **** 
  38:code/main.c   **** }
 122              		.loc 1 38 0
 123 0026 C046     		nop
 124 0028 02B0     		add	sp, sp, #8	@,,
 125              		@ sp needed	@
 126 002a 7047     		bx	lr
 127              	.L6:
 128              		.align	2
 129              	.L5:
 130 002c 00000000 		.word	OUT_REGS
 131              		.cfi_endproc
 132              	.LFE1:
 133              		.size	write_out_1, .-write_out_1
ARM GAS  /tmp/cchgnHfm.s 			page 4


 134              		.align	2
 135              		.global	write_out_2
 136              		.code	16
 137              		.thumb_func
 138              		.type	write_out_2, %function
 139              	write_out_2:
 140              	.LFB2:
  39:code/main.c   **** void write_out_2(uint32_t value_2) {
 141              		.loc 1 39 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0030 82B0     		sub	sp, sp, #8	@,,
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 8
 149 0032 0190     		str	r0, [sp, #4]	@ value_2, value_2
  40:code/main.c   **** 
  41:code/main.c   ****   OUT_REGS[2] = value_2;
 150              		.loc 1 41 0
 151 0034 034B     		ldr	r3, .L8	@ tmp112,
 152 0036 1B68     		ldr	r3, [r3]	@ D.4302, OUT_REGS
 153 0038 0833     		adds	r3, r3, #8	@ D.4302,
 154 003a 019A     		ldr	r2, [sp, #4]	@ tmp113, value_2
 155 003c 1A60     		str	r2, [r3]	@ tmp113, *_3
  42:code/main.c   **** 
  43:code/main.c   **** }
 156              		.loc 1 43 0
 157 003e C046     		nop
 158 0040 02B0     		add	sp, sp, #8	@,,
 159              		@ sp needed	@
 160 0042 7047     		bx	lr
 161              	.L9:
 162              		.align	2
 163              	.L8:
 164 0044 00000000 		.word	OUT_REGS
 165              		.cfi_endproc
 166              	.LFE2:
 167              		.size	write_out_2, .-write_out_2
 168              		.align	2
 169              		.global	write_out_3
 170              		.code	16
 171              		.thumb_func
 172              		.type	write_out_3, %function
 173              	write_out_3:
 174              	.LFB3:
  44:code/main.c   **** void write_out_3(uint32_t value_3) {
 175              		.loc 1 44 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0048 82B0     		sub	sp, sp, #8	@,,
 181              	.LCFI3:
 182              		.cfi_def_cfa_offset 8
 183 004a 0190     		str	r0, [sp, #4]	@ value_3, value_3
  45:code/main.c   **** 
ARM GAS  /tmp/cchgnHfm.s 			page 5


  46:code/main.c   ****   OUT_REGS[3] = value_3;
 184              		.loc 1 46 0
 185 004c 034B     		ldr	r3, .L11	@ tmp112,
 186 004e 1B68     		ldr	r3, [r3]	@ D.4303, OUT_REGS
 187 0050 0C33     		adds	r3, r3, #12	@ D.4303,
 188 0052 019A     		ldr	r2, [sp, #4]	@ tmp113, value_3
 189 0054 1A60     		str	r2, [r3]	@ tmp113, *_3
  47:code/main.c   **** 
  48:code/main.c   **** }
 190              		.loc 1 48 0
 191 0056 C046     		nop
 192 0058 02B0     		add	sp, sp, #8	@,,
 193              		@ sp needed	@
 194 005a 7047     		bx	lr
 195              	.L12:
 196              		.align	2
 197              	.L11:
 198 005c 00000000 		.word	OUT_REGS
 199              		.cfi_endproc
 200              	.LFE3:
 201              		.size	write_out_3, .-write_out_3
 202              		.align	2
 203              		.global	set_out_invalid
 204              		.code	16
 205              		.thumb_func
 206              		.type	set_out_invalid, %function
 207              	set_out_invalid:
 208              	.LFB4:
  49:code/main.c   **** void set_out_invalid(void) {
 209              		.loc 1 49 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
  50:code/main.c   **** 	
  51:code/main.c   ****   OUT_REGS[3] = 0;
 214              		.loc 1 51 0
 215 0060 0A4B     		ldr	r3, .L14	@ tmp117,
 216 0062 1B68     		ldr	r3, [r3]	@ D.4304, OUT_REGS
 217 0064 0C33     		adds	r3, r3, #12	@ D.4304,
 218 0066 0022     		movs	r2, #0	@ tmp118,
 219 0068 1A60     		str	r2, [r3]	@ tmp118, *_3
  52:code/main.c   ****   OUT_REGS[2] = 0;
 220              		.loc 1 52 0
 221 006a 084B     		ldr	r3, .L14	@ tmp119,
 222 006c 1B68     		ldr	r3, [r3]	@ D.4304, OUT_REGS
 223 006e 0833     		adds	r3, r3, #8	@ D.4304,
 224 0070 0022     		movs	r2, #0	@ tmp120,
 225 0072 1A60     		str	r2, [r3]	@ tmp120, *_6
  53:code/main.c   ****   OUT_REGS[1] = 0;
 226              		.loc 1 53 0
 227 0074 054B     		ldr	r3, .L14	@ tmp121,
 228 0076 1B68     		ldr	r3, [r3]	@ D.4304, OUT_REGS
 229 0078 0433     		adds	r3, r3, #4	@ D.4304,
 230 007a 0022     		movs	r2, #0	@ tmp122,
 231 007c 1A60     		str	r2, [r3]	@ tmp122, *_9
  54:code/main.c   ****   OUT_REGS[0] = 0;
ARM GAS  /tmp/cchgnHfm.s 			page 6


 232              		.loc 1 54 0
 233 007e 034B     		ldr	r3, .L14	@ tmp123,
 234 0080 1B68     		ldr	r3, [r3]	@ D.4304, OUT_REGS
 235 0082 0022     		movs	r2, #0	@ tmp124,
 236 0084 1A60     		str	r2, [r3]	@ tmp124, *_11
  55:code/main.c   **** 
  56:code/main.c   **** }
 237              		.loc 1 56 0
 238 0086 C046     		nop
 239              		@ sp needed	@
 240 0088 7047     		bx	lr
 241              	.L15:
 242 008a C046     		.align	2
 243              	.L14:
 244 008c 00000000 		.word	OUT_REGS
 245              		.cfi_endproc
 246              	.LFE4:
 247              		.size	set_out_invalid, .-set_out_invalid
 248              		.align	2
 249              		.global	read_out
 250              		.code	16
 251              		.thumb_func
 252              		.type	read_out, %function
 253              	read_out:
 254              	.LFB5:
  57:code/main.c   **** 
  58:code/main.c   **** uint32_t read_out(void) {
 255              		.loc 1 58 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
  59:code/main.c   **** 
  60:code/main.c   ****   return OUT_REGS[0];
 260              		.loc 1 60 0
 261 0090 024B     		ldr	r3, .L18	@ tmp113,
 262 0092 1B68     		ldr	r3, [r3]	@ D.4305, OUT_REGS
 263 0094 1B68     		ldr	r3, [r3]	@ D.4306, *_2
  61:code/main.c   ****   return OUT_REGS[1];
  62:code/main.c   ****   return OUT_REGS[2];
  63:code/main.c   ****   return OUT_REGS[3];  
  64:code/main.c   **** }
 264              		.loc 1 64 0
 265 0096 1800     		movs	r0, r3	@, <retval>
 266              		@ sp needed	@
 267 0098 7047     		bx	lr
 268              	.L19:
 269 009a C046     		.align	2
 270              	.L18:
 271 009c 00000000 		.word	OUT_REGS
 272              		.cfi_endproc
 273              	.LFE5:
 274              		.size	read_out, .-read_out
 275              		.align	2
 276              		.global	read_switches
 277              		.code	16
 278              		.thumb_func
ARM GAS  /tmp/cchgnHfm.s 			page 7


 279              		.type	read_switches, %function
 280              	read_switches:
 281              	.LFB6:
  65:code/main.c   **** 
  66:code/main.c   **** uint32_t read_switches(int addr) {
 282              		.loc 1 66 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 8
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 00a0 82B0     		sub	sp, sp, #8	@,,
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 8
 290 00a2 0190     		str	r0, [sp, #4]	@ addr, addr
  67:code/main.c   **** 
  68:code/main.c   ****   return SW_REGS[addr];
 291              		.loc 1 68 0
 292 00a4 044B     		ldr	r3, .L22	@ tmp116,
 293 00a6 1A68     		ldr	r2, [r3]	@ D.4307, SW_REGS
 294 00a8 019B     		ldr	r3, [sp, #4]	@ D.4308, addr
 295 00aa 9B00     		lsls	r3, r3, #2	@ D.4308, D.4308,
 296 00ac D318     		adds	r3, r2, r3	@ D.4307, D.4307, D.4308
 297 00ae 1B68     		ldr	r3, [r3]	@ D.4309, *_6
  69:code/main.c   **** 
  70:code/main.c   **** }
 298              		.loc 1 70 0
 299 00b0 1800     		movs	r0, r3	@, <retval>
 300 00b2 02B0     		add	sp, sp, #8	@,,
 301              		@ sp needed	@
 302 00b4 7047     		bx	lr
 303              	.L23:
 304 00b6 C046     		.align	2
 305              	.L22:
 306 00b8 00000000 		.word	SW_REGS
 307              		.cfi_endproc
 308              	.LFE6:
 309              		.size	read_switches, .-read_switches
 310              		.align	2
 311              		.global	check_switches
 312              		.code	16
 313              		.thumb_func
 314              		.type	check_switches, %function
 315              	check_switches:
 316              	.LFB7:
  71:code/main.c   **** 
  72:code/main.c   **** bool check_switches(int addr) {
 317              		.loc 1 72 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 00bc 84B0     		sub	sp, sp, #16	@,,
 323              	.LCFI5:
 324              		.cfi_def_cfa_offset 16
 325 00be 0190     		str	r0, [sp, #4]	@ addr, addr
  73:code/main.c   **** 
  74:code/main.c   ****   int status, switches_ready;
ARM GAS  /tmp/cchgnHfm.s 			page 8


  75:code/main.c   ****   
  76:code/main.c   ****   status = SW_REGS[2];
 326              		.loc 1 76 0
 327 00c0 094B     		ldr	r3, .L26	@ tmp116,
 328 00c2 1B68     		ldr	r3, [r3]	@ D.4310, SW_REGS
 329 00c4 0833     		adds	r3, r3, #8	@ D.4310,
 330 00c6 1B68     		ldr	r3, [r3]	@ D.4311, *_3
 331 00c8 0393     		str	r3, [sp, #12]	@ D.4311, status
  77:code/main.c   ****   
  78:code/main.c   ****   // use the addr value to select one bit of the status register
  79:code/main.c   ****   switches_ready = (status >> addr) & 1;
 332              		.loc 1 79 0
 333 00ca 039A     		ldr	r2, [sp, #12]	@ tmp117, status
 334 00cc 019B     		ldr	r3, [sp, #4]	@ tmp118, addr
 335 00ce 1A41     		asrs	r2, r2, r3	@ tmp117, tmp117, tmp118
 336 00d0 1300     		movs	r3, r2	@ D.4312, tmp117
 337 00d2 0122     		movs	r2, #1	@ tmp120,
 338 00d4 1340     		ands	r3, r2	@ tmp119, tmp120
 339 00d6 0293     		str	r3, [sp, #8]	@ tmp119, switches_ready
  80:code/main.c   ****   
  81:code/main.c   ****   return (switches_ready == 1);
 340              		.loc 1 81 0
 341 00d8 029B     		ldr	r3, [sp, #8]	@ tmp122, switches_ready
 342 00da 013B     		subs	r3, r3, #1	@ tmp124,
 343 00dc 5A42     		rsbs	r2, r3, #0	@ tmp125, tmp124
 344 00de 5341     		adcs	r3, r3, r2	@ tmp123, tmp124, tmp125
 345 00e0 DBB2     		uxtb	r3, r3	@ D.4313, tmp121
  82:code/main.c   **** 
  83:code/main.c   **** }
 346              		.loc 1 83 0
 347 00e2 1800     		movs	r0, r3	@, <retval>
 348 00e4 04B0     		add	sp, sp, #16	@,,
 349              		@ sp needed	@
 350 00e6 7047     		bx	lr
 351              	.L27:
 352              		.align	2
 353              	.L26:
 354 00e8 00000000 		.word	SW_REGS
 355              		.cfi_endproc
 356              	.LFE7:
 357              		.size	check_switches, .-check_switches
 358              		.align	2
 359              		.global	wait_for_any_switch_data
 360              		.code	16
 361              		.thumb_func
 362              		.type	wait_for_any_switch_data, %function
 363              	wait_for_any_switch_data:
 364              	.LFB8:
  84:code/main.c   **** 
  85:code/main.c   **** void wait_for_any_switch_data(void) {
 365              		.loc 1 85 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              		@ link register save eliminated.
  86:code/main.c   **** 
  87:code/main.c   ****   // this is a 'busy wait'
ARM GAS  /tmp/cchgnHfm.s 			page 9


  88:code/main.c   **** 
  89:code/main.c   ****   //  ( it should only be used if there is nothing
  90:code/main.c   ****   //   else for the embedded system to do )
  91:code/main.c   **** 
  92:code/main.c   ****   while ( SW_REGS[2] == 0 );
 370              		.loc 1 92 0
 371 00ec C046     		nop
 372              	.L29:
 373              		.loc 1 92 0 is_stmt 0 discriminator 1
 374 00ee 044B     		ldr	r3, .L31	@ tmp113,
 375 00f0 1B68     		ldr	r3, [r3]	@ D.4314, SW_REGS
 376 00f2 0833     		adds	r3, r3, #8	@ D.4314,
 377 00f4 1B68     		ldr	r3, [r3]	@ D.4315, *_3
 378 00f6 002B     		cmp	r3, #0	@ D.4315,
 379 00f8 F9D0     		beq	.L29	@,
  93:code/main.c   ****   
  94:code/main.c   ****   return;
 380              		.loc 1 94 0 is_stmt 1
 381 00fa C046     		nop
  95:code/main.c   **** 
  96:code/main.c   **** }
 382              		.loc 1 96 0
 383              		@ sp needed	@
 384 00fc 7047     		bx	lr
 385              	.L32:
 386 00fe C046     		.align	2
 387              	.L31:
 388 0100 00000000 		.word	SW_REGS
 389              		.cfi_endproc
 390              	.LFE8:
 391              		.size	wait_for_any_switch_data, .-wait_for_any_switch_data
 392              		.align	2
 393              		.global	main
 394              		.code	16
 395              		.thumb_func
 396              		.type	main, %function
 397              	main:
 398              	.LFB9:
  97:code/main.c   **** 
  98:code/main.c   **** 
  99:code/main.c   **** //////////////////////////////////////////////////////////////////
 100:code/main.c   **** // Main Function
 101:code/main.c   **** //////////////////////////////////////////////////////////////////
 102:code/main.c   **** 
 103:code/main.c   **** int main(void) {
 399              		.loc 1 103 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0104 10B5     		push	{r4, lr}	@
 404              	.LCFI6:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
 104:code/main.c   **** 
 105:code/main.c   ****   write_out_0( 0x00000000 ); 
 408              		.loc 1 105 0
ARM GAS  /tmp/cchgnHfm.s 			page 10


 409 0106 0020     		movs	r0, #0	@,
 410 0108 FFF7FEFF 		bl	write_out_0	@
 106:code/main.c   ****   write_out_1( 0x00000000 );
 411              		.loc 1 106 0
 412 010c 0020     		movs	r0, #0	@,
 413 010e FFF7FEFF 		bl	write_out_1	@
 107:code/main.c   ****   write_out_2( 0x11110000 );
 414              		.loc 1 107 0
 415 0112 054B     		ldr	r3, .L35	@ tmp112,
 416 0114 1800     		movs	r0, r3	@, tmp112
 417 0116 FFF7FEFF 		bl	write_out_2	@
 108:code/main.c   ****   write_out_3( 0x11110000 );  
 418              		.loc 1 108 0
 419 011a 034B     		ldr	r3, .L35	@ tmp113,
 420 011c 1800     		movs	r0, r3	@, tmp113
 421 011e FFF7FEFF 		bl	write_out_3	@
 422 0122 0023     		movs	r3, #0	@ D.4316,
 109:code/main.c   **** 	
 110:code/main.c   ****     
 111:code/main.c   **** 
 112:code/main.c   **** 
 113:code/main.c   **** }
 423              		.loc 1 113 0
 424 0124 1800     		movs	r0, r3	@, <retval>
 425              		@ sp needed	@
 426 0126 10BD     		pop	{r4, pc}
 427              	.L36:
 428              		.align	2
 429              	.L35:
 430 0128 00001111 		.word	286326784
 431              		.cfi_endproc
 432              	.LFE9:
 433              		.size	main, .-main
 434              	.Letext0:
 435              		.file 2 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 436              		.file 3 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 437              		.section	.debug_info,"",%progbits
 438              	.Ldebug_info0:
 439 0000 2B020000 		.4byte	0x22b
 440 0004 0200     		.2byte	0x2
 441 0006 00000000 		.4byte	.Ldebug_abbrev0
 442 000a 04       		.byte	0x4
 443 000b 01       		.uleb128 0x1
 444 000c 7D000000 		.4byte	.LASF31
 445 0010 0C       		.byte	0xc
 446 0011 AC010000 		.4byte	.LASF32
 447 0015 D4010000 		.4byte	.LASF33
 448 0019 00000000 		.4byte	.Ltext0
 449 001d 2C010000 		.4byte	.Letext0
 450 0021 00000000 		.4byte	.Ldebug_line0
 451 0025 02       		.uleb128 0x2
 452 0026 01       		.byte	0x1
 453 0027 06       		.byte	0x6
 454 0028 18020000 		.4byte	.LASF0
 455 002c 02       		.uleb128 0x2
 456 002d 01       		.byte	0x1
 457 002e 08       		.byte	0x8
ARM GAS  /tmp/cchgnHfm.s 			page 11


 458 002f 01010000 		.4byte	.LASF1
 459 0033 02       		.uleb128 0x2
 460 0034 02       		.byte	0x2
 461 0035 05       		.byte	0x5
 462 0036 B8010000 		.4byte	.LASF2
 463 003a 02       		.uleb128 0x2
 464 003b 02       		.byte	0x2
 465 003c 07       		.byte	0x7
 466 003d 30010000 		.4byte	.LASF3
 467 0041 02       		.uleb128 0x2
 468 0042 04       		.byte	0x4
 469 0043 05       		.byte	0x5
 470 0044 CB010000 		.4byte	.LASF4
 471 0048 03       		.uleb128 0x3
 472 0049 53010000 		.4byte	.LASF9
 473 004d 02       		.byte	0x2
 474 004e 41       		.byte	0x41
 475 004f 53000000 		.4byte	0x53
 476 0053 02       		.uleb128 0x2
 477 0054 04       		.byte	0x4
 478 0055 07       		.byte	0x7
 479 0056 1E010000 		.4byte	.LASF5
 480 005a 02       		.uleb128 0x2
 481 005b 08       		.byte	0x8
 482 005c 05       		.byte	0x5
 483 005d 9E010000 		.4byte	.LASF6
 484 0061 02       		.uleb128 0x2
 485 0062 08       		.byte	0x8
 486 0063 07       		.byte	0x7
 487 0064 7F010000 		.4byte	.LASF7
 488 0068 04       		.uleb128 0x4
 489 0069 04       		.byte	0x4
 490 006a 05       		.byte	0x5
 491 006b 696E7400 		.ascii	"int\000"
 492 006f 02       		.uleb128 0x2
 493 0070 04       		.byte	0x4
 494 0071 07       		.byte	0x7
 495 0072 72010000 		.4byte	.LASF8
 496 0076 03       		.uleb128 0x3
 497 0077 C2010000 		.4byte	.LASF10
 498 007b 03       		.byte	0x3
 499 007c 30       		.byte	0x30
 500 007d 48000000 		.4byte	0x48
 501 0081 05       		.uleb128 0x5
 502 0082 01       		.byte	0x1
 503 0083 0E000000 		.4byte	.LASF11
 504 0087 01       		.byte	0x1
 505 0088 1D       		.byte	0x1d
 506 0089 01       		.byte	0x1
 507 008a 00000000 		.4byte	.LFB0
 508 008e 18000000 		.4byte	.LFE0
 509 0092 00000000 		.4byte	.LLST0
 510 0096 01       		.byte	0x1
 511 0097 AA000000 		.4byte	0xaa
 512 009b 06       		.uleb128 0x6
 513 009c 08020000 		.4byte	.LASF13
 514 00a0 01       		.byte	0x1
ARM GAS  /tmp/cchgnHfm.s 			page 12


 515 00a1 1D       		.byte	0x1d
 516 00a2 76000000 		.4byte	0x76
 517 00a6 02       		.byte	0x2
 518 00a7 91       		.byte	0x91
 519 00a8 7C       		.sleb128 -4
 520 00a9 00       		.byte	0
 521 00aa 05       		.uleb128 0x5
 522 00ab 01       		.byte	0x1
 523 00ac 1A000000 		.4byte	.LASF12
 524 00b0 01       		.byte	0x1
 525 00b1 22       		.byte	0x22
 526 00b2 01       		.byte	0x1
 527 00b3 18000000 		.4byte	.LFB1
 528 00b7 30000000 		.4byte	.LFE1
 529 00bb 20000000 		.4byte	.LLST1
 530 00bf 01       		.byte	0x1
 531 00c0 D3000000 		.4byte	0xd3
 532 00c4 06       		.uleb128 0x6
 533 00c5 10020000 		.4byte	.LASF14
 534 00c9 01       		.byte	0x1
 535 00ca 22       		.byte	0x22
 536 00cb 76000000 		.4byte	0x76
 537 00cf 02       		.byte	0x2
 538 00d0 91       		.byte	0x91
 539 00d1 7C       		.sleb128 -4
 540 00d2 00       		.byte	0
 541 00d3 05       		.uleb128 0x5
 542 00d4 01       		.byte	0x1
 543 00d5 26000000 		.4byte	.LASF15
 544 00d9 01       		.byte	0x1
 545 00da 27       		.byte	0x27
 546 00db 01       		.byte	0x1
 547 00dc 30000000 		.4byte	.LFB2
 548 00e0 48000000 		.4byte	.LFE2
 549 00e4 40000000 		.4byte	.LLST2
 550 00e8 01       		.byte	0x1
 551 00e9 FC000000 		.4byte	0xfc
 552 00ed 06       		.uleb128 0x6
 553 00ee 96010000 		.4byte	.LASF16
 554 00f2 01       		.byte	0x1
 555 00f3 27       		.byte	0x27
 556 00f4 76000000 		.4byte	0x76
 557 00f8 02       		.byte	0x2
 558 00f9 91       		.byte	0x91
 559 00fa 7C       		.sleb128 -4
 560 00fb 00       		.byte	0
 561 00fc 05       		.uleb128 0x5
 562 00fd 01       		.byte	0x1
 563 00fe 32000000 		.4byte	.LASF17
 564 0102 01       		.byte	0x1
 565 0103 2C       		.byte	0x2c
 566 0104 01       		.byte	0x1
 567 0105 48000000 		.4byte	.LFB3
 568 0109 60000000 		.4byte	.LFE3
 569 010d 60000000 		.4byte	.LLST3
 570 0111 01       		.byte	0x1
 571 0112 25010000 		.4byte	0x125
ARM GAS  /tmp/cchgnHfm.s 			page 13


 572 0116 06       		.uleb128 0x6
 573 0117 24020000 		.4byte	.LASF18
 574 011b 01       		.byte	0x1
 575 011c 2C       		.byte	0x2c
 576 011d 76000000 		.4byte	0x76
 577 0121 02       		.byte	0x2
 578 0122 91       		.byte	0x91
 579 0123 7C       		.sleb128 -4
 580 0124 00       		.byte	0
 581 0125 07       		.uleb128 0x7
 582 0126 01       		.byte	0x1
 583 0127 43010000 		.4byte	.LASF25
 584 012b 01       		.byte	0x1
 585 012c 31       		.byte	0x31
 586 012d 01       		.byte	0x1
 587 012e 60000000 		.4byte	.LFB4
 588 0132 90000000 		.4byte	.LFE4
 589 0136 02       		.byte	0x2
 590 0137 7D       		.byte	0x7d
 591 0138 00       		.sleb128 0
 592 0139 01       		.byte	0x1
 593 013a 08       		.uleb128 0x8
 594 013b 01       		.byte	0x1
 595 013c 45000000 		.4byte	.LASF27
 596 0140 01       		.byte	0x1
 597 0141 3A       		.byte	0x3a
 598 0142 01       		.byte	0x1
 599 0143 76000000 		.4byte	0x76
 600 0147 90000000 		.4byte	.LFB5
 601 014b A0000000 		.4byte	.LFE5
 602 014f 02       		.byte	0x2
 603 0150 7D       		.byte	0x7d
 604 0151 00       		.sleb128 0
 605 0152 01       		.byte	0x1
 606 0153 09       		.uleb128 0x9
 607 0154 01       		.byte	0x1
 608 0155 00000000 		.4byte	.LASF20
 609 0159 01       		.byte	0x1
 610 015a 42       		.byte	0x42
 611 015b 01       		.byte	0x1
 612 015c 76000000 		.4byte	0x76
 613 0160 A0000000 		.4byte	.LFB6
 614 0164 BC000000 		.4byte	.LFE6
 615 0168 80000000 		.4byte	.LLST4
 616 016c 01       		.byte	0x1
 617 016d 80010000 		.4byte	0x180
 618 0171 06       		.uleb128 0x6
 619 0172 70000000 		.4byte	.LASF19
 620 0176 01       		.byte	0x1
 621 0177 42       		.byte	0x42
 622 0178 68000000 		.4byte	0x68
 623 017c 02       		.byte	0x2
 624 017d 91       		.byte	0x91
 625 017e 7C       		.sleb128 -4
 626 017f 00       		.byte	0
 627 0180 09       		.uleb128 0x9
 628 0181 01       		.byte	0x1
ARM GAS  /tmp/cchgnHfm.s 			page 14


 629 0182 5E010000 		.4byte	.LASF21
 630 0186 01       		.byte	0x1
 631 0187 48       		.byte	0x48
 632 0188 01       		.byte	0x1
 633 0189 C9010000 		.4byte	0x1c9
 634 018d BC000000 		.4byte	.LFB7
 635 0191 EC000000 		.4byte	.LFE7
 636 0195 A0000000 		.4byte	.LLST5
 637 0199 01       		.byte	0x1
 638 019a C9010000 		.4byte	0x1c9
 639 019e 06       		.uleb128 0x6
 640 019f 70000000 		.4byte	.LASF19
 641 01a3 01       		.byte	0x1
 642 01a4 48       		.byte	0x48
 643 01a5 68000000 		.4byte	0x68
 644 01a9 02       		.byte	0x2
 645 01aa 91       		.byte	0x91
 646 01ab 74       		.sleb128 -12
 647 01ac 0A       		.uleb128 0xa
 648 01ad 3E000000 		.4byte	.LASF22
 649 01b1 01       		.byte	0x1
 650 01b2 4A       		.byte	0x4a
 651 01b3 68000000 		.4byte	0x68
 652 01b7 02       		.byte	0x2
 653 01b8 91       		.byte	0x91
 654 01b9 7C       		.sleb128 -4
 655 01ba 0A       		.uleb128 0xa
 656 01bb 0F010000 		.4byte	.LASF23
 657 01bf 01       		.byte	0x1
 658 01c0 4A       		.byte	0x4a
 659 01c1 68000000 		.4byte	0x68
 660 01c5 02       		.byte	0x2
 661 01c6 91       		.byte	0x91
 662 01c7 78       		.sleb128 -8
 663 01c8 00       		.byte	0
 664 01c9 02       		.uleb128 0x2
 665 01ca 01       		.byte	0x1
 666 01cb 02       		.byte	0x2
 667 01cc 2C020000 		.4byte	.LASF24
 668 01d0 07       		.uleb128 0x7
 669 01d1 01       		.byte	0x1
 670 01d2 57000000 		.4byte	.LASF26
 671 01d6 01       		.byte	0x1
 672 01d7 55       		.byte	0x55
 673 01d8 01       		.byte	0x1
 674 01d9 EC000000 		.4byte	.LFB8
 675 01dd 04010000 		.4byte	.LFE8
 676 01e1 02       		.byte	0x2
 677 01e2 7D       		.byte	0x7d
 678 01e3 00       		.sleb128 0
 679 01e4 01       		.byte	0x1
 680 01e5 0B       		.uleb128 0xb
 681 01e6 01       		.byte	0x1
 682 01e7 6D010000 		.4byte	.LASF28
 683 01eb 01       		.byte	0x1
 684 01ec 67       		.byte	0x67
 685 01ed 01       		.byte	0x1
ARM GAS  /tmp/cchgnHfm.s 			page 15


 686 01ee 68000000 		.4byte	0x68
 687 01f2 04010000 		.4byte	.LFB9
 688 01f6 2C010000 		.4byte	.LFE9
 689 01fa C0000000 		.4byte	.LLST6
 690 01fe 01       		.byte	0x1
 691 01ff 0C       		.uleb128 0xc
 692 0200 75000000 		.4byte	.LASF29
 693 0204 01       		.byte	0x1
 694 0205 14       		.byte	0x14
 695 0206 11020000 		.4byte	0x211
 696 020a 01       		.byte	0x1
 697 020b 05       		.byte	0x5
 698 020c 03       		.byte	0x3
 699 020d 00000000 		.4byte	SW_REGS
 700 0211 0D       		.uleb128 0xd
 701 0212 04       		.byte	0x4
 702 0213 17020000 		.4byte	0x217
 703 0217 0E       		.uleb128 0xe
 704 0218 76000000 		.4byte	0x76
 705 021c 0C       		.uleb128 0xc
 706 021d 4E000000 		.4byte	.LASF30
 707 0221 01       		.byte	0x1
 708 0222 15       		.byte	0x15
 709 0223 11020000 		.4byte	0x211
 710 0227 01       		.byte	0x1
 711 0228 05       		.byte	0x5
 712 0229 03       		.byte	0x3
 713 022a 00000000 		.4byte	OUT_REGS
 714 022e 00       		.byte	0
 715              		.section	.debug_abbrev,"",%progbits
 716              	.Ldebug_abbrev0:
 717 0000 01       		.uleb128 0x1
 718 0001 11       		.uleb128 0x11
 719 0002 01       		.byte	0x1
 720 0003 25       		.uleb128 0x25
 721 0004 0E       		.uleb128 0xe
 722 0005 13       		.uleb128 0x13
 723 0006 0B       		.uleb128 0xb
 724 0007 03       		.uleb128 0x3
 725 0008 0E       		.uleb128 0xe
 726 0009 1B       		.uleb128 0x1b
 727 000a 0E       		.uleb128 0xe
 728 000b 11       		.uleb128 0x11
 729 000c 01       		.uleb128 0x1
 730 000d 12       		.uleb128 0x12
 731 000e 01       		.uleb128 0x1
 732 000f 10       		.uleb128 0x10
 733 0010 06       		.uleb128 0x6
 734 0011 00       		.byte	0
 735 0012 00       		.byte	0
 736 0013 02       		.uleb128 0x2
 737 0014 24       		.uleb128 0x24
 738 0015 00       		.byte	0
 739 0016 0B       		.uleb128 0xb
 740 0017 0B       		.uleb128 0xb
 741 0018 3E       		.uleb128 0x3e
 742 0019 0B       		.uleb128 0xb
ARM GAS  /tmp/cchgnHfm.s 			page 16


 743 001a 03       		.uleb128 0x3
 744 001b 0E       		.uleb128 0xe
 745 001c 00       		.byte	0
 746 001d 00       		.byte	0
 747 001e 03       		.uleb128 0x3
 748 001f 16       		.uleb128 0x16
 749 0020 00       		.byte	0
 750 0021 03       		.uleb128 0x3
 751 0022 0E       		.uleb128 0xe
 752 0023 3A       		.uleb128 0x3a
 753 0024 0B       		.uleb128 0xb
 754 0025 3B       		.uleb128 0x3b
 755 0026 0B       		.uleb128 0xb
 756 0027 49       		.uleb128 0x49
 757 0028 13       		.uleb128 0x13
 758 0029 00       		.byte	0
 759 002a 00       		.byte	0
 760 002b 04       		.uleb128 0x4
 761 002c 24       		.uleb128 0x24
 762 002d 00       		.byte	0
 763 002e 0B       		.uleb128 0xb
 764 002f 0B       		.uleb128 0xb
 765 0030 3E       		.uleb128 0x3e
 766 0031 0B       		.uleb128 0xb
 767 0032 03       		.uleb128 0x3
 768 0033 08       		.uleb128 0x8
 769 0034 00       		.byte	0
 770 0035 00       		.byte	0
 771 0036 05       		.uleb128 0x5
 772 0037 2E       		.uleb128 0x2e
 773 0038 01       		.byte	0x1
 774 0039 3F       		.uleb128 0x3f
 775 003a 0C       		.uleb128 0xc
 776 003b 03       		.uleb128 0x3
 777 003c 0E       		.uleb128 0xe
 778 003d 3A       		.uleb128 0x3a
 779 003e 0B       		.uleb128 0xb
 780 003f 3B       		.uleb128 0x3b
 781 0040 0B       		.uleb128 0xb
 782 0041 27       		.uleb128 0x27
 783 0042 0C       		.uleb128 0xc
 784 0043 11       		.uleb128 0x11
 785 0044 01       		.uleb128 0x1
 786 0045 12       		.uleb128 0x12
 787 0046 01       		.uleb128 0x1
 788 0047 40       		.uleb128 0x40
 789 0048 06       		.uleb128 0x6
 790 0049 9742     		.uleb128 0x2117
 791 004b 0C       		.uleb128 0xc
 792 004c 01       		.uleb128 0x1
 793 004d 13       		.uleb128 0x13
 794 004e 00       		.byte	0
 795 004f 00       		.byte	0
 796 0050 06       		.uleb128 0x6
 797 0051 05       		.uleb128 0x5
 798 0052 00       		.byte	0
 799 0053 03       		.uleb128 0x3
ARM GAS  /tmp/cchgnHfm.s 			page 17


 800 0054 0E       		.uleb128 0xe
 801 0055 3A       		.uleb128 0x3a
 802 0056 0B       		.uleb128 0xb
 803 0057 3B       		.uleb128 0x3b
 804 0058 0B       		.uleb128 0xb
 805 0059 49       		.uleb128 0x49
 806 005a 13       		.uleb128 0x13
 807 005b 02       		.uleb128 0x2
 808 005c 0A       		.uleb128 0xa
 809 005d 00       		.byte	0
 810 005e 00       		.byte	0
 811 005f 07       		.uleb128 0x7
 812 0060 2E       		.uleb128 0x2e
 813 0061 00       		.byte	0
 814 0062 3F       		.uleb128 0x3f
 815 0063 0C       		.uleb128 0xc
 816 0064 03       		.uleb128 0x3
 817 0065 0E       		.uleb128 0xe
 818 0066 3A       		.uleb128 0x3a
 819 0067 0B       		.uleb128 0xb
 820 0068 3B       		.uleb128 0x3b
 821 0069 0B       		.uleb128 0xb
 822 006a 27       		.uleb128 0x27
 823 006b 0C       		.uleb128 0xc
 824 006c 11       		.uleb128 0x11
 825 006d 01       		.uleb128 0x1
 826 006e 12       		.uleb128 0x12
 827 006f 01       		.uleb128 0x1
 828 0070 40       		.uleb128 0x40
 829 0071 0A       		.uleb128 0xa
 830 0072 9742     		.uleb128 0x2117
 831 0074 0C       		.uleb128 0xc
 832 0075 00       		.byte	0
 833 0076 00       		.byte	0
 834 0077 08       		.uleb128 0x8
 835 0078 2E       		.uleb128 0x2e
 836 0079 00       		.byte	0
 837 007a 3F       		.uleb128 0x3f
 838 007b 0C       		.uleb128 0xc
 839 007c 03       		.uleb128 0x3
 840 007d 0E       		.uleb128 0xe
 841 007e 3A       		.uleb128 0x3a
 842 007f 0B       		.uleb128 0xb
 843 0080 3B       		.uleb128 0x3b
 844 0081 0B       		.uleb128 0xb
 845 0082 27       		.uleb128 0x27
 846 0083 0C       		.uleb128 0xc
 847 0084 49       		.uleb128 0x49
 848 0085 13       		.uleb128 0x13
 849 0086 11       		.uleb128 0x11
 850 0087 01       		.uleb128 0x1
 851 0088 12       		.uleb128 0x12
 852 0089 01       		.uleb128 0x1
 853 008a 40       		.uleb128 0x40
 854 008b 0A       		.uleb128 0xa
 855 008c 9742     		.uleb128 0x2117
 856 008e 0C       		.uleb128 0xc
ARM GAS  /tmp/cchgnHfm.s 			page 18


 857 008f 00       		.byte	0
 858 0090 00       		.byte	0
 859 0091 09       		.uleb128 0x9
 860 0092 2E       		.uleb128 0x2e
 861 0093 01       		.byte	0x1
 862 0094 3F       		.uleb128 0x3f
 863 0095 0C       		.uleb128 0xc
 864 0096 03       		.uleb128 0x3
 865 0097 0E       		.uleb128 0xe
 866 0098 3A       		.uleb128 0x3a
 867 0099 0B       		.uleb128 0xb
 868 009a 3B       		.uleb128 0x3b
 869 009b 0B       		.uleb128 0xb
 870 009c 27       		.uleb128 0x27
 871 009d 0C       		.uleb128 0xc
 872 009e 49       		.uleb128 0x49
 873 009f 13       		.uleb128 0x13
 874 00a0 11       		.uleb128 0x11
 875 00a1 01       		.uleb128 0x1
 876 00a2 12       		.uleb128 0x12
 877 00a3 01       		.uleb128 0x1
 878 00a4 40       		.uleb128 0x40
 879 00a5 06       		.uleb128 0x6
 880 00a6 9742     		.uleb128 0x2117
 881 00a8 0C       		.uleb128 0xc
 882 00a9 01       		.uleb128 0x1
 883 00aa 13       		.uleb128 0x13
 884 00ab 00       		.byte	0
 885 00ac 00       		.byte	0
 886 00ad 0A       		.uleb128 0xa
 887 00ae 34       		.uleb128 0x34
 888 00af 00       		.byte	0
 889 00b0 03       		.uleb128 0x3
 890 00b1 0E       		.uleb128 0xe
 891 00b2 3A       		.uleb128 0x3a
 892 00b3 0B       		.uleb128 0xb
 893 00b4 3B       		.uleb128 0x3b
 894 00b5 0B       		.uleb128 0xb
 895 00b6 49       		.uleb128 0x49
 896 00b7 13       		.uleb128 0x13
 897 00b8 02       		.uleb128 0x2
 898 00b9 0A       		.uleb128 0xa
 899 00ba 00       		.byte	0
 900 00bb 00       		.byte	0
 901 00bc 0B       		.uleb128 0xb
 902 00bd 2E       		.uleb128 0x2e
 903 00be 00       		.byte	0
 904 00bf 3F       		.uleb128 0x3f
 905 00c0 0C       		.uleb128 0xc
 906 00c1 03       		.uleb128 0x3
 907 00c2 0E       		.uleb128 0xe
 908 00c3 3A       		.uleb128 0x3a
 909 00c4 0B       		.uleb128 0xb
 910 00c5 3B       		.uleb128 0x3b
 911 00c6 0B       		.uleb128 0xb
 912 00c7 27       		.uleb128 0x27
 913 00c8 0C       		.uleb128 0xc
ARM GAS  /tmp/cchgnHfm.s 			page 19


 914 00c9 49       		.uleb128 0x49
 915 00ca 13       		.uleb128 0x13
 916 00cb 11       		.uleb128 0x11
 917 00cc 01       		.uleb128 0x1
 918 00cd 12       		.uleb128 0x12
 919 00ce 01       		.uleb128 0x1
 920 00cf 40       		.uleb128 0x40
 921 00d0 06       		.uleb128 0x6
 922 00d1 9642     		.uleb128 0x2116
 923 00d3 0C       		.uleb128 0xc
 924 00d4 00       		.byte	0
 925 00d5 00       		.byte	0
 926 00d6 0C       		.uleb128 0xc
 927 00d7 34       		.uleb128 0x34
 928 00d8 00       		.byte	0
 929 00d9 03       		.uleb128 0x3
 930 00da 0E       		.uleb128 0xe
 931 00db 3A       		.uleb128 0x3a
 932 00dc 0B       		.uleb128 0xb
 933 00dd 3B       		.uleb128 0x3b
 934 00de 0B       		.uleb128 0xb
 935 00df 49       		.uleb128 0x49
 936 00e0 13       		.uleb128 0x13
 937 00e1 3F       		.uleb128 0x3f
 938 00e2 0C       		.uleb128 0xc
 939 00e3 02       		.uleb128 0x2
 940 00e4 0A       		.uleb128 0xa
 941 00e5 00       		.byte	0
 942 00e6 00       		.byte	0
 943 00e7 0D       		.uleb128 0xd
 944 00e8 0F       		.uleb128 0xf
 945 00e9 00       		.byte	0
 946 00ea 0B       		.uleb128 0xb
 947 00eb 0B       		.uleb128 0xb
 948 00ec 49       		.uleb128 0x49
 949 00ed 13       		.uleb128 0x13
 950 00ee 00       		.byte	0
 951 00ef 00       		.byte	0
 952 00f0 0E       		.uleb128 0xe
 953 00f1 35       		.uleb128 0x35
 954 00f2 00       		.byte	0
 955 00f3 49       		.uleb128 0x49
 956 00f4 13       		.uleb128 0x13
 957 00f5 00       		.byte	0
 958 00f6 00       		.byte	0
 959 00f7 00       		.byte	0
 960              		.section	.debug_loc,"",%progbits
 961              	.Ldebug_loc0:
 962              	.LLST0:
 963 0000 00000000 		.4byte	.LFB0-.Ltext0
 964 0004 02000000 		.4byte	.LCFI0-.Ltext0
 965 0008 0200     		.2byte	0x2
 966 000a 7D       		.byte	0x7d
 967 000b 00       		.sleb128 0
 968 000c 02000000 		.4byte	.LCFI0-.Ltext0
 969 0010 18000000 		.4byte	.LFE0-.Ltext0
 970 0014 0200     		.2byte	0x2
ARM GAS  /tmp/cchgnHfm.s 			page 20


 971 0016 7D       		.byte	0x7d
 972 0017 08       		.sleb128 8
 973 0018 00000000 		.4byte	0
 974 001c 00000000 		.4byte	0
 975              	.LLST1:
 976 0020 18000000 		.4byte	.LFB1-.Ltext0
 977 0024 1A000000 		.4byte	.LCFI1-.Ltext0
 978 0028 0200     		.2byte	0x2
 979 002a 7D       		.byte	0x7d
 980 002b 00       		.sleb128 0
 981 002c 1A000000 		.4byte	.LCFI1-.Ltext0
 982 0030 30000000 		.4byte	.LFE1-.Ltext0
 983 0034 0200     		.2byte	0x2
 984 0036 7D       		.byte	0x7d
 985 0037 08       		.sleb128 8
 986 0038 00000000 		.4byte	0
 987 003c 00000000 		.4byte	0
 988              	.LLST2:
 989 0040 30000000 		.4byte	.LFB2-.Ltext0
 990 0044 32000000 		.4byte	.LCFI2-.Ltext0
 991 0048 0200     		.2byte	0x2
 992 004a 7D       		.byte	0x7d
 993 004b 00       		.sleb128 0
 994 004c 32000000 		.4byte	.LCFI2-.Ltext0
 995 0050 48000000 		.4byte	.LFE2-.Ltext0
 996 0054 0200     		.2byte	0x2
 997 0056 7D       		.byte	0x7d
 998 0057 08       		.sleb128 8
 999 0058 00000000 		.4byte	0
 1000 005c 00000000 		.4byte	0
 1001              	.LLST3:
 1002 0060 48000000 		.4byte	.LFB3-.Ltext0
 1003 0064 4A000000 		.4byte	.LCFI3-.Ltext0
 1004 0068 0200     		.2byte	0x2
 1005 006a 7D       		.byte	0x7d
 1006 006b 00       		.sleb128 0
 1007 006c 4A000000 		.4byte	.LCFI3-.Ltext0
 1008 0070 60000000 		.4byte	.LFE3-.Ltext0
 1009 0074 0200     		.2byte	0x2
 1010 0076 7D       		.byte	0x7d
 1011 0077 08       		.sleb128 8
 1012 0078 00000000 		.4byte	0
 1013 007c 00000000 		.4byte	0
 1014              	.LLST4:
 1015 0080 A0000000 		.4byte	.LFB6-.Ltext0
 1016 0084 A2000000 		.4byte	.LCFI4-.Ltext0
 1017 0088 0200     		.2byte	0x2
 1018 008a 7D       		.byte	0x7d
 1019 008b 00       		.sleb128 0
 1020 008c A2000000 		.4byte	.LCFI4-.Ltext0
 1021 0090 BC000000 		.4byte	.LFE6-.Ltext0
 1022 0094 0200     		.2byte	0x2
 1023 0096 7D       		.byte	0x7d
 1024 0097 08       		.sleb128 8
 1025 0098 00000000 		.4byte	0
 1026 009c 00000000 		.4byte	0
 1027              	.LLST5:
ARM GAS  /tmp/cchgnHfm.s 			page 21


 1028 00a0 BC000000 		.4byte	.LFB7-.Ltext0
 1029 00a4 BE000000 		.4byte	.LCFI5-.Ltext0
 1030 00a8 0200     		.2byte	0x2
 1031 00aa 7D       		.byte	0x7d
 1032 00ab 00       		.sleb128 0
 1033 00ac BE000000 		.4byte	.LCFI5-.Ltext0
 1034 00b0 EC000000 		.4byte	.LFE7-.Ltext0
 1035 00b4 0200     		.2byte	0x2
 1036 00b6 7D       		.byte	0x7d
 1037 00b7 10       		.sleb128 16
 1038 00b8 00000000 		.4byte	0
 1039 00bc 00000000 		.4byte	0
 1040              	.LLST6:
 1041 00c0 04010000 		.4byte	.LFB9-.Ltext0
 1042 00c4 06010000 		.4byte	.LCFI6-.Ltext0
 1043 00c8 0200     		.2byte	0x2
 1044 00ca 7D       		.byte	0x7d
 1045 00cb 00       		.sleb128 0
 1046 00cc 06010000 		.4byte	.LCFI6-.Ltext0
 1047 00d0 2C010000 		.4byte	.LFE9-.Ltext0
 1048 00d4 0200     		.2byte	0x2
 1049 00d6 7D       		.byte	0x7d
 1050 00d7 08       		.sleb128 8
 1051 00d8 00000000 		.4byte	0
 1052 00dc 00000000 		.4byte	0
 1053              		.section	.debug_aranges,"",%progbits
 1054 0000 1C000000 		.4byte	0x1c
 1055 0004 0200     		.2byte	0x2
 1056 0006 00000000 		.4byte	.Ldebug_info0
 1057 000a 04       		.byte	0x4
 1058 000b 00       		.byte	0
 1059 000c 0000     		.2byte	0
 1060 000e 0000     		.2byte	0
 1061 0010 00000000 		.4byte	.Ltext0
 1062 0014 2C010000 		.4byte	.Letext0-.Ltext0
 1063 0018 00000000 		.4byte	0
 1064 001c 00000000 		.4byte	0
 1065              		.section	.debug_line,"",%progbits
 1066              	.Ldebug_line0:
 1067 0000 01010000 		.section	.debug_str,"MS",%progbits,1
 1067      0200BF00 
 1067      00000201 
 1067      FB0E0D00 
 1067      01010101 
 1068              	.LASF20:
 1069 0000 72656164 		.ascii	"read_switches\000"
 1069      5F737769 
 1069      74636865 
 1069      7300
 1070              	.LASF11:
 1071 000e 77726974 		.ascii	"write_out_0\000"
 1071      655F6F75 
 1071      745F3000 
 1072              	.LASF12:
 1073 001a 77726974 		.ascii	"write_out_1\000"
 1073      655F6F75 
 1073      745F3100 
ARM GAS  /tmp/cchgnHfm.s 			page 22


 1074              	.LASF15:
 1075 0026 77726974 		.ascii	"write_out_2\000"
 1075      655F6F75 
 1075      745F3200 
 1076              	.LASF17:
 1077 0032 77726974 		.ascii	"write_out_3\000"
 1077      655F6F75 
 1077      745F3300 
 1078              	.LASF22:
 1079 003e 73746174 		.ascii	"status\000"
 1079      757300
 1080              	.LASF27:
 1081 0045 72656164 		.ascii	"read_out\000"
 1081      5F6F7574 
 1081      00
 1082              	.LASF30:
 1083 004e 4F55545F 		.ascii	"OUT_REGS\000"
 1083      52454753 
 1083      00
 1084              	.LASF26:
 1085 0057 77616974 		.ascii	"wait_for_any_switch_data\000"
 1085      5F666F72 
 1085      5F616E79 
 1085      5F737769 
 1085      7463685F 
 1086              	.LASF19:
 1087 0070 61646472 		.ascii	"addr\000"
 1087      00
 1088              	.LASF29:
 1089 0075 53575F52 		.ascii	"SW_REGS\000"
 1089      45475300 
 1090              	.LASF31:
 1091 007d 474E5520 		.ascii	"GNU C11 5.4.1 20160919 (release) [ARM/embedded-5-br"
 1091      43313120 
 1091      352E342E 
 1091      31203230 
 1091      31363039 
 1092 00b0 616E6368 		.ascii	"anch revision 240496] -mcpu=cortex-m0 -mthumb -gdwa"
 1092      20726576 
 1092      6973696F 
 1092      6E203234 
 1092      30343936 
 1093 00e3 72662D32 		.ascii	"rf-2 -O0 -fomit-frame-pointer\000"
 1093      202D4F30 
 1093      202D666F 
 1093      6D69742D 
 1093      6672616D 
 1094              	.LASF1:
 1095 0101 756E7369 		.ascii	"unsigned char\000"
 1095      676E6564 
 1095      20636861 
 1095      7200
 1096              	.LASF23:
 1097 010f 73776974 		.ascii	"switches_ready\000"
 1097      63686573 
 1097      5F726561 
 1097      647900
ARM GAS  /tmp/cchgnHfm.s 			page 23


 1098              	.LASF5:
 1099 011e 6C6F6E67 		.ascii	"long unsigned int\000"
 1099      20756E73 
 1099      69676E65 
 1099      6420696E 
 1099      7400
 1100              	.LASF3:
 1101 0130 73686F72 		.ascii	"short unsigned int\000"
 1101      7420756E 
 1101      7369676E 
 1101      65642069 
 1101      6E7400
 1102              	.LASF25:
 1103 0143 7365745F 		.ascii	"set_out_invalid\000"
 1103      6F75745F 
 1103      696E7661 
 1103      6C696400 
 1104              	.LASF9:
 1105 0153 5F5F7569 		.ascii	"__uint32_t\000"
 1105      6E743332 
 1105      5F7400
 1106              	.LASF21:
 1107 015e 63686563 		.ascii	"check_switches\000"
 1107      6B5F7377 
 1107      69746368 
 1107      657300
 1108              	.LASF28:
 1109 016d 6D61696E 		.ascii	"main\000"
 1109      00
 1110              	.LASF8:
 1111 0172 756E7369 		.ascii	"unsigned int\000"
 1111      676E6564 
 1111      20696E74 
 1111      00
 1112              	.LASF7:
 1113 017f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1113      206C6F6E 
 1113      6720756E 
 1113      7369676E 
 1113      65642069 
 1114              	.LASF16:
 1115 0196 76616C75 		.ascii	"value_2\000"
 1115      655F3200 
 1116              	.LASF6:
 1117 019e 6C6F6E67 		.ascii	"long long int\000"
 1117      206C6F6E 
 1117      6720696E 
 1117      7400
 1118              	.LASF32:
 1119 01ac 636F6465 		.ascii	"code/main.c\000"
 1119      2F6D6169 
 1119      6E2E6300 
 1120              	.LASF2:
 1121 01b8 73686F72 		.ascii	"short int\000"
 1121      7420696E 
 1121      7400
 1122              	.LASF10:
ARM GAS  /tmp/cchgnHfm.s 			page 24


 1123 01c2 75696E74 		.ascii	"uint32_t\000"
 1123      33325F74 
 1123      00
 1124              	.LASF4:
 1125 01cb 6C6F6E67 		.ascii	"long int\000"
 1125      20696E74 
 1125      00
 1126              	.LASF33:
 1127 01d4 2F686F6D 		.ascii	"/home/ks6n19/design/system_on_chip/example/software"
 1127      652F6B73 
 1127      366E3139 
 1127      2F646573 
 1127      69676E2F 
 1128 0207 00       		.ascii	"\000"
 1129              	.LASF13:
 1130 0208 76616C75 		.ascii	"value_0\000"
 1130      655F3000 
 1131              	.LASF14:
 1132 0210 76616C75 		.ascii	"value_1\000"
 1132      655F3100 
 1133              	.LASF0:
 1134 0218 7369676E 		.ascii	"signed char\000"
 1134      65642063 
 1134      68617200 
 1135              	.LASF18:
 1136 0224 76616C75 		.ascii	"value_3\000"
 1136      655F3300 
 1137              	.LASF24:
 1138 022c 5F426F6F 		.ascii	"_Bool\000"
 1138      6C00
 1139              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cchgnHfm.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cchgnHfm.s:57     .data:00000000 SW_REGS
     /tmp/cchgnHfm.s:54     .data:00000000 $d
     /tmp/cchgnHfm.s:63     .data:00000004 OUT_REGS
     /tmp/cchgnHfm.s:66     .text:00000000 $t
     /tmp/cchgnHfm.s:71     .text:00000000 write_out_0
     /tmp/cchgnHfm.s:96     .text:00000014 $d
     /tmp/cchgnHfm.s:100    .text:00000018 $t
     /tmp/cchgnHfm.s:105    .text:00000018 write_out_1
     /tmp/cchgnHfm.s:130    .text:0000002c $d
     /tmp/cchgnHfm.s:134    .text:00000030 $t
     /tmp/cchgnHfm.s:139    .text:00000030 write_out_2
     /tmp/cchgnHfm.s:164    .text:00000044 $d
     /tmp/cchgnHfm.s:168    .text:00000048 $t
     /tmp/cchgnHfm.s:173    .text:00000048 write_out_3
     /tmp/cchgnHfm.s:198    .text:0000005c $d
     /tmp/cchgnHfm.s:202    .text:00000060 $t
     /tmp/cchgnHfm.s:207    .text:00000060 set_out_invalid
     /tmp/cchgnHfm.s:244    .text:0000008c $d
     /tmp/cchgnHfm.s:248    .text:00000090 $t
     /tmp/cchgnHfm.s:253    .text:00000090 read_out
     /tmp/cchgnHfm.s:271    .text:0000009c $d
     /tmp/cchgnHfm.s:275    .text:000000a0 $t
     /tmp/cchgnHfm.s:280    .text:000000a0 read_switches
     /tmp/cchgnHfm.s:306    .text:000000b8 $d
     /tmp/cchgnHfm.s:310    .text:000000bc $t
     /tmp/cchgnHfm.s:315    .text:000000bc check_switches
     /tmp/cchgnHfm.s:354    .text:000000e8 $d
     /tmp/cchgnHfm.s:358    .text:000000ec $t
     /tmp/cchgnHfm.s:363    .text:000000ec wait_for_any_switch_data
     /tmp/cchgnHfm.s:388    .text:00000100 $d
     /tmp/cchgnHfm.s:392    .text:00000104 $t
     /tmp/cchgnHfm.s:397    .text:00000104 main
     /tmp/cchgnHfm.s:430    .text:00000128 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
