ARM GAS  /tmp/cctrEP4k.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.4.1 20160919 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -imultilib armv6-m
  18              	@ -iprefix /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/
  19              	@ -isysroot /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../arm-none-eabi
  20              	@ -MD code/main.d -MF .dep/main.o.d -MP -MQ code/main.o -D__USES_INITFINI__
  21              	@ -D RUN_FROM_FLASH=1 code/main.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip code/main.o -gdwarf-2 -O0 -Wall -Wstrict-prototypes
  23              	@ -fomit-frame-pointer -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  30              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
  31              	@ -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  32              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  33              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  34              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings
  35              	@ -fomit-frame-pointer -fpeephole -fprefetch-loop-arrays
  36              	@ -freg-struct-return -fsched-critical-path-heuristic
  37              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  38              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  39              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  40              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  41              	@ -fsplit-ivs-in-unroller -fstdarg-opt -fstrict-volatile-bitfields
  42              	@ -fsync-libcalls -ftrapping-math -ftree-coalesce-vars -ftree-cselim
  43              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  44              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  45              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  46              	@ -fzero-initialized-in-bss -mlittle-endian -mpic-data-is-text-relative
  47              	@ -msched-prolog -mthumb -mvectorize-with-neon-quad
  48              	
  49              		.text
  50              	.Ltext0:
  51              		.cfi_sections	.debug_frame
  52              		.global	SW_REGS
  53              		.data
  54              		.align	2
  55              		.type	SW_REGS, %object
  56              		.size	SW_REGS, 4
  57              	SW_REGS:
ARM GAS  /tmp/cctrEP4k.s 			page 2


  58 0000 00000040 		.word	1073741824
  59              		.global	OUT_REGS
  60              		.align	2
  61              		.type	OUT_REGS, %object
  62              		.size	OUT_REGS, 4
  63              	OUT_REGS:
  64 0004 00000050 		.word	1342177280
  65              		.text
  66              		.align	2
  67              		.global	write_out_0
  68              		.code	16
  69              		.thumb_func
  70              		.type	write_out_0, %function
  71              	write_out_0:
  72              	.LFB0:
  73              		.file 1 "code/main.c"
   1:code/main.c   **** #define __MAIN_C__
   2:code/main.c   **** 
   3:code/main.c   **** #include <stdint.h>
   4:code/main.c   **** #include <stdbool.h>
   5:code/main.c   **** 
   6:code/main.c   **** // Define the raw base address values for the i/o devices
   7:code/main.c   **** 
   8:code/main.c   **** #define AHB_SW_BASE                             0x40000000
   9:code/main.c   **** #define AHB_OUT_BASE                            0x50000000
  10:code/main.c   **** 
  11:code/main.c   **** // Define pointers with correct type for access to 32-bit i/o devices
  12:code/main.c   **** //
  13:code/main.c   **** // The locations in the devices can then be accessed as:
  14:code/main.c   **** //    SW_REGS[0]
  15:code/main.c   **** //    SW_REGS[1]
  16:code/main.c   **** //    SW_REGS[2]
  17:code/main.c   **** //    OUT_REGS[0]
  18:code/main.c   **** //    OUT_REGS[1]
  19:code/main.c   **** //
  20:code/main.c   **** volatile uint32_t* SW_REGS = (volatile uint32_t*) AHB_SW_BASE;
  21:code/main.c   **** volatile uint32_t* OUT_REGS = (volatile uint32_t*) AHB_OUT_BASE;
  22:code/main.c   **** 
  23:code/main.c   **** #include <stdint.h>
  24:code/main.c   **** 
  25:code/main.c   **** //////////////////////////////////////////////////////////////////
  26:code/main.c   **** // Functions provided to access i/o devices
  27:code/main.c   **** //////////////////////////////////////////////////////////////////
  28:code/main.c   **** // x1
  29:code/main.c   **** void write_out_0(uint32_t value_0) {
  74              		.loc 1 29 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 82B0     		sub	sp, sp, #8	@,,
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 8
  82 0002 0190     		str	r0, [sp, #4]	@ value_0, value_0
  30:code/main.c   **** 
  31:code/main.c   ****   OUT_REGS[0] = value_0;
  83              		.loc 1 31 0
ARM GAS  /tmp/cctrEP4k.s 			page 3


  84 0004 034B     		ldr	r3, .L2	@ tmp111,
  85 0006 1B68     		ldr	r3, [r3]	@ D.4301, OUT_REGS
  86 0008 019A     		ldr	r2, [sp, #4]	@ tmp112, value_0
  87 000a 1A60     		str	r2, [r3]	@ tmp112, *_2
  32:code/main.c   **** 
  33:code/main.c   **** }
  88              		.loc 1 33 0
  89 000c C046     		nop
  90 000e 02B0     		add	sp, sp, #8	@,,
  91              		@ sp needed	@
  92 0010 7047     		bx	lr
  93              	.L3:
  94 0012 C046     		.align	2
  95              	.L2:
  96 0014 00000000 		.word	OUT_REGS
  97              		.cfi_endproc
  98              	.LFE0:
  99              		.size	write_out_0, .-write_out_0
 100              		.align	2
 101              		.global	write_out_1
 102              		.code	16
 103              		.thumb_func
 104              		.type	write_out_1, %function
 105              	write_out_1:
 106              	.LFB1:
  34:code/main.c   **** //y1
  35:code/main.c   **** void write_out_1(uint32_t value_1) {
 107              		.loc 1 35 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              		@ link register save eliminated.
 112 0018 82B0     		sub	sp, sp, #8	@,,
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115 001a 0190     		str	r0, [sp, #4]	@ value_1, value_1
  36:code/main.c   **** 
  37:code/main.c   ****   OUT_REGS[1] = value_1;
 116              		.loc 1 37 0
 117 001c 034B     		ldr	r3, .L5	@ tmp112,
 118 001e 1B68     		ldr	r3, [r3]	@ D.4302, OUT_REGS
 119 0020 0433     		adds	r3, r3, #4	@ D.4302,
 120 0022 019A     		ldr	r2, [sp, #4]	@ tmp113, value_1
 121 0024 1A60     		str	r2, [r3]	@ tmp113, *_3
  38:code/main.c   **** 
  39:code/main.c   **** }
 122              		.loc 1 39 0
 123 0026 C046     		nop
 124 0028 02B0     		add	sp, sp, #8	@,,
 125              		@ sp needed	@
 126 002a 7047     		bx	lr
 127              	.L6:
 128              		.align	2
 129              	.L5:
 130 002c 00000000 		.word	OUT_REGS
 131              		.cfi_endproc
 132              	.LFE1:
ARM GAS  /tmp/cctrEP4k.s 			page 4


 133              		.size	write_out_1, .-write_out_1
 134              		.align	2
 135              		.global	write_out_2
 136              		.code	16
 137              		.thumb_func
 138              		.type	write_out_2, %function
 139              	write_out_2:
 140              	.LFB2:
  40:code/main.c   **** //x2
  41:code/main.c   **** void write_out_2(uint32_t value_2) {
 141              		.loc 1 41 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0030 82B0     		sub	sp, sp, #8	@,,
 147              	.LCFI2:
 148              		.cfi_def_cfa_offset 8
 149 0032 0190     		str	r0, [sp, #4]	@ value_2, value_2
  42:code/main.c   **** 
  43:code/main.c   ****   OUT_REGS[2] = value_2;
 150              		.loc 1 43 0
 151 0034 034B     		ldr	r3, .L8	@ tmp112,
 152 0036 1B68     		ldr	r3, [r3]	@ D.4303, OUT_REGS
 153 0038 0833     		adds	r3, r3, #8	@ D.4303,
 154 003a 019A     		ldr	r2, [sp, #4]	@ tmp113, value_2
 155 003c 1A60     		str	r2, [r3]	@ tmp113, *_3
  44:code/main.c   **** 
  45:code/main.c   **** }
 156              		.loc 1 45 0
 157 003e C046     		nop
 158 0040 02B0     		add	sp, sp, #8	@,,
 159              		@ sp needed	@
 160 0042 7047     		bx	lr
 161              	.L9:
 162              		.align	2
 163              	.L8:
 164 0044 00000000 		.word	OUT_REGS
 165              		.cfi_endproc
 166              	.LFE2:
 167              		.size	write_out_2, .-write_out_2
 168              		.align	2
 169              		.global	write_out_3
 170              		.code	16
 171              		.thumb_func
 172              		.type	write_out_3, %function
 173              	write_out_3:
 174              	.LFB3:
  46:code/main.c   **** //y2
  47:code/main.c   **** void write_out_3(uint32_t value_3) {
 175              		.loc 1 47 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180 0048 82B0     		sub	sp, sp, #8	@,,
 181              	.LCFI3:
ARM GAS  /tmp/cctrEP4k.s 			page 5


 182              		.cfi_def_cfa_offset 8
 183 004a 0190     		str	r0, [sp, #4]	@ value_3, value_3
  48:code/main.c   **** 
  49:code/main.c   ****   OUT_REGS[3] = value_3;
 184              		.loc 1 49 0
 185 004c 034B     		ldr	r3, .L11	@ tmp112,
 186 004e 1B68     		ldr	r3, [r3]	@ D.4304, OUT_REGS
 187 0050 0C33     		adds	r3, r3, #12	@ D.4304,
 188 0052 019A     		ldr	r2, [sp, #4]	@ tmp113, value_3
 189 0054 1A60     		str	r2, [r3]	@ tmp113, *_3
  50:code/main.c   **** 
  51:code/main.c   **** }
 190              		.loc 1 51 0
 191 0056 C046     		nop
 192 0058 02B0     		add	sp, sp, #8	@,,
 193              		@ sp needed	@
 194 005a 7047     		bx	lr
 195              	.L12:
 196              		.align	2
 197              	.L11:
 198 005c 00000000 		.word	OUT_REGS
 199              		.cfi_endproc
 200              	.LFE3:
 201              		.size	write_out_3, .-write_out_3
 202              		.align	2
 203              		.global	set_out_invalid
 204              		.code	16
 205              		.thumb_func
 206              		.type	set_out_invalid, %function
 207              	set_out_invalid:
 208              	.LFB4:
  52:code/main.c   **** void set_out_invalid(void) {
 209              		.loc 1 52 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
  53:code/main.c   **** 	
  54:code/main.c   ****   OUT_REGS[3] = 0;
 214              		.loc 1 54 0
 215 0060 0A4B     		ldr	r3, .L14	@ tmp117,
 216 0062 1B68     		ldr	r3, [r3]	@ D.4305, OUT_REGS
 217 0064 0C33     		adds	r3, r3, #12	@ D.4305,
 218 0066 0022     		movs	r2, #0	@ tmp118,
 219 0068 1A60     		str	r2, [r3]	@ tmp118, *_3
  55:code/main.c   ****   OUT_REGS[2] = 0;
 220              		.loc 1 55 0
 221 006a 084B     		ldr	r3, .L14	@ tmp119,
 222 006c 1B68     		ldr	r3, [r3]	@ D.4305, OUT_REGS
 223 006e 0833     		adds	r3, r3, #8	@ D.4305,
 224 0070 0022     		movs	r2, #0	@ tmp120,
 225 0072 1A60     		str	r2, [r3]	@ tmp120, *_6
  56:code/main.c   ****   OUT_REGS[1] = 0;
 226              		.loc 1 56 0
 227 0074 054B     		ldr	r3, .L14	@ tmp121,
 228 0076 1B68     		ldr	r3, [r3]	@ D.4305, OUT_REGS
 229 0078 0433     		adds	r3, r3, #4	@ D.4305,
ARM GAS  /tmp/cctrEP4k.s 			page 6


 230 007a 0022     		movs	r2, #0	@ tmp122,
 231 007c 1A60     		str	r2, [r3]	@ tmp122, *_9
  57:code/main.c   ****   OUT_REGS[0] = 0;
 232              		.loc 1 57 0
 233 007e 034B     		ldr	r3, .L14	@ tmp123,
 234 0080 1B68     		ldr	r3, [r3]	@ D.4305, OUT_REGS
 235 0082 0022     		movs	r2, #0	@ tmp124,
 236 0084 1A60     		str	r2, [r3]	@ tmp124, *_11
  58:code/main.c   **** 
  59:code/main.c   **** }
 237              		.loc 1 59 0
 238 0086 C046     		nop
 239              		@ sp needed	@
 240 0088 7047     		bx	lr
 241              	.L15:
 242 008a C046     		.align	2
 243              	.L14:
 244 008c 00000000 		.word	OUT_REGS
 245              		.cfi_endproc
 246              	.LFE4:
 247              		.size	set_out_invalid, .-set_out_invalid
 248              		.align	2
 249              		.global	read_out
 250              		.code	16
 251              		.thumb_func
 252              		.type	read_out, %function
 253              	read_out:
 254              	.LFB5:
  60:code/main.c   **** 
  61:code/main.c   **** uint32_t read_out(void) {
 255              		.loc 1 61 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
  62:code/main.c   **** 
  63:code/main.c   ****   return OUT_REGS[0];
 260              		.loc 1 63 0
 261 0090 024B     		ldr	r3, .L18	@ tmp113,
 262 0092 1B68     		ldr	r3, [r3]	@ D.4306, OUT_REGS
 263 0094 1B68     		ldr	r3, [r3]	@ D.4307, *_2
  64:code/main.c   ****   return OUT_REGS[1];
  65:code/main.c   ****   return OUT_REGS[2];
  66:code/main.c   ****   return OUT_REGS[3];  
  67:code/main.c   **** }
 264              		.loc 1 67 0
 265 0096 1800     		movs	r0, r3	@, <retval>
 266              		@ sp needed	@
 267 0098 7047     		bx	lr
 268              	.L19:
 269 009a C046     		.align	2
 270              	.L18:
 271 009c 00000000 		.word	OUT_REGS
 272              		.cfi_endproc
 273              	.LFE5:
 274              		.size	read_out, .-read_out
 275              		.align	2
ARM GAS  /tmp/cctrEP4k.s 			page 7


 276              		.global	read_switches
 277              		.code	16
 278              		.thumb_func
 279              		.type	read_switches, %function
 280              	read_switches:
 281              	.LFB6:
  68:code/main.c   **** 
  69:code/main.c   **** uint32_t read_switches(int addr) {
 282              		.loc 1 69 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 8
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 00a0 82B0     		sub	sp, sp, #8	@,,
 288              	.LCFI4:
 289              		.cfi_def_cfa_offset 8
 290 00a2 0190     		str	r0, [sp, #4]	@ addr, addr
  70:code/main.c   **** 
  71:code/main.c   ****   return SW_REGS[addr];
 291              		.loc 1 71 0
 292 00a4 044B     		ldr	r3, .L22	@ tmp116,
 293 00a6 1A68     		ldr	r2, [r3]	@ D.4308, SW_REGS
 294 00a8 019B     		ldr	r3, [sp, #4]	@ D.4309, addr
 295 00aa 9B00     		lsls	r3, r3, #2	@ D.4309, D.4309,
 296 00ac D318     		adds	r3, r2, r3	@ D.4308, D.4308, D.4309
 297 00ae 1B68     		ldr	r3, [r3]	@ D.4310, *_6
  72:code/main.c   **** 
  73:code/main.c   **** }
 298              		.loc 1 73 0
 299 00b0 1800     		movs	r0, r3	@, <retval>
 300 00b2 02B0     		add	sp, sp, #8	@,,
 301              		@ sp needed	@
 302 00b4 7047     		bx	lr
 303              	.L23:
 304 00b6 C046     		.align	2
 305              	.L22:
 306 00b8 00000000 		.word	SW_REGS
 307              		.cfi_endproc
 308              	.LFE6:
 309              		.size	read_switches, .-read_switches
 310              		.align	2
 311              		.global	check_switches
 312              		.code	16
 313              		.thumb_func
 314              		.type	check_switches, %function
 315              	check_switches:
 316              	.LFB7:
  74:code/main.c   **** 
  75:code/main.c   **** bool check_switches(int addr) {
 317              		.loc 1 75 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 00bc 84B0     		sub	sp, sp, #16	@,,
 323              	.LCFI5:
 324              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/cctrEP4k.s 			page 8


 325 00be 0190     		str	r0, [sp, #4]	@ addr, addr
  76:code/main.c   **** 
  77:code/main.c   ****   int status, switches_ready;
  78:code/main.c   ****   
  79:code/main.c   ****   status = SW_REGS[2];
 326              		.loc 1 79 0
 327 00c0 094B     		ldr	r3, .L26	@ tmp116,
 328 00c2 1B68     		ldr	r3, [r3]	@ D.4311, SW_REGS
 329 00c4 0833     		adds	r3, r3, #8	@ D.4311,
 330 00c6 1B68     		ldr	r3, [r3]	@ D.4312, *_3
 331 00c8 0393     		str	r3, [sp, #12]	@ D.4312, status
  80:code/main.c   ****   
  81:code/main.c   ****   // use the addr value to select one bit of the status register
  82:code/main.c   ****   switches_ready = (status >> addr) & 1;
 332              		.loc 1 82 0
 333 00ca 039A     		ldr	r2, [sp, #12]	@ tmp117, status
 334 00cc 019B     		ldr	r3, [sp, #4]	@ tmp118, addr
 335 00ce 1A41     		asrs	r2, r2, r3	@ tmp117, tmp117, tmp118
 336 00d0 1300     		movs	r3, r2	@ D.4313, tmp117
 337 00d2 0122     		movs	r2, #1	@ tmp120,
 338 00d4 1340     		ands	r3, r2	@ tmp119, tmp120
 339 00d6 0293     		str	r3, [sp, #8]	@ tmp119, switches_ready
  83:code/main.c   ****   
  84:code/main.c   ****   return (switches_ready == 1);
 340              		.loc 1 84 0
 341 00d8 029B     		ldr	r3, [sp, #8]	@ tmp122, switches_ready
 342 00da 013B     		subs	r3, r3, #1	@ tmp124,
 343 00dc 5A42     		rsbs	r2, r3, #0	@ tmp125, tmp124
 344 00de 5341     		adcs	r3, r3, r2	@ tmp123, tmp124, tmp125
 345 00e0 DBB2     		uxtb	r3, r3	@ D.4314, tmp121
  85:code/main.c   **** 
  86:code/main.c   **** }
 346              		.loc 1 86 0
 347 00e2 1800     		movs	r0, r3	@, <retval>
 348 00e4 04B0     		add	sp, sp, #16	@,,
 349              		@ sp needed	@
 350 00e6 7047     		bx	lr
 351              	.L27:
 352              		.align	2
 353              	.L26:
 354 00e8 00000000 		.word	SW_REGS
 355              		.cfi_endproc
 356              	.LFE7:
 357              		.size	check_switches, .-check_switches
 358              		.align	2
 359              		.global	wait_for_any_switch_data
 360              		.code	16
 361              		.thumb_func
 362              		.type	wait_for_any_switch_data, %function
 363              	wait_for_any_switch_data:
 364              	.LFB8:
  87:code/main.c   **** 
  88:code/main.c   **** void wait_for_any_switch_data(void) {
 365              		.loc 1 88 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cctrEP4k.s 			page 9


 369              		@ link register save eliminated.
  89:code/main.c   **** 
  90:code/main.c   ****   // this is a 'busy wait'
  91:code/main.c   **** 
  92:code/main.c   ****   //  ( it should only be used if there is nothing
  93:code/main.c   ****   //   else for the embedded system to do )
  94:code/main.c   **** 
  95:code/main.c   ****   while ( SW_REGS[2] == 0 );
 370              		.loc 1 95 0
 371 00ec C046     		nop
 372              	.L29:
 373              		.loc 1 95 0 is_stmt 0 discriminator 1
 374 00ee 044B     		ldr	r3, .L31	@ tmp113,
 375 00f0 1B68     		ldr	r3, [r3]	@ D.4315, SW_REGS
 376 00f2 0833     		adds	r3, r3, #8	@ D.4315,
 377 00f4 1B68     		ldr	r3, [r3]	@ D.4316, *_3
 378 00f6 002B     		cmp	r3, #0	@ D.4316,
 379 00f8 F9D0     		beq	.L29	@,
  96:code/main.c   ****   
  97:code/main.c   ****   return;
 380              		.loc 1 97 0 is_stmt 1
 381 00fa C046     		nop
  98:code/main.c   **** 
  99:code/main.c   **** }
 382              		.loc 1 99 0
 383              		@ sp needed	@
 384 00fc 7047     		bx	lr
 385              	.L32:
 386 00fe C046     		.align	2
 387              	.L31:
 388 0100 00000000 		.word	SW_REGS
 389              		.cfi_endproc
 390              	.LFE8:
 391              		.size	wait_for_any_switch_data, .-wait_for_any_switch_data
 392              		.align	2
 393              		.global	main
 394              		.code	16
 395              		.thumb_func
 396              		.type	main, %function
 397              	main:
 398              	.LFB9:
 100:code/main.c   **** 
 101:code/main.c   **** 
 102:code/main.c   **** //////////////////////////////////////////////////////////////////
 103:code/main.c   **** // Main Function
 104:code/main.c   **** //////////////////////////////////////////////////////////////////
 105:code/main.c   **** 
 106:code/main.c   **** int main(void) {
 399              		.loc 1 106 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0104 10B5     		push	{r4, lr}	@
 404              	.LCFI6:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 4, -8
 407              		.cfi_offset 14, -4
ARM GAS  /tmp/cctrEP4k.s 			page 10


 408              	.L34:
 107:code/main.c   **** 
 108:code/main.c   **** while(1) {
 109:code/main.c   ****   write_out_0( 0x078 ); //x1
 409              		.loc 1 109 0 discriminator 1
 410 0106 7820     		movs	r0, #120	@,
 411 0108 FFF7FEFF 		bl	write_out_0	@
 110:code/main.c   ****   write_out_1( 0x078 );//y1
 412              		.loc 1 110 0 discriminator 1
 413 010c 7820     		movs	r0, #120	@,
 414 010e FFF7FEFF 		bl	write_out_1	@
 111:code/main.c   ****   write_out_2( 0x140 );//x2
 415              		.loc 1 111 0 discriminator 1
 416 0112 A023     		movs	r3, #160	@ tmp113,
 417 0114 5B00     		lsls	r3, r3, #1	@ tmp111, tmp113,
 418 0116 1800     		movs	r0, r3	@, tmp111
 419 0118 FFF7FEFF 		bl	write_out_2	@
 112:code/main.c   ****   write_out_3( 0x140 );// y2  
 420              		.loc 1 112 0 discriminator 1
 421 011c A023     		movs	r3, #160	@ tmp114,
 422 011e 5B00     		lsls	r3, r3, #1	@ tmp112, tmp114,
 423 0120 1800     		movs	r0, r3	@, tmp112
 424 0122 FFF7FEFF 		bl	write_out_3	@
 113:code/main.c   **** }
 425              		.loc 1 113 0 discriminator 1
 426 0126 EEE7     		b	.L34	@
 427              		.cfi_endproc
 428              	.LFE9:
 429              		.size	main, .-main
 430              	.Letext0:
 431              		.file 2 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 432              		.file 3 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 433              		.section	.debug_info,"",%progbits
 434              	.Ldebug_info0:
 435 0000 2B020000 		.4byte	0x22b
 436 0004 0200     		.2byte	0x2
 437 0006 00000000 		.4byte	.Ldebug_abbrev0
 438 000a 04       		.byte	0x4
 439 000b 01       		.uleb128 0x1
 440 000c 7D000000 		.4byte	.LASF31
 441 0010 0C       		.byte	0xc
 442 0011 AC010000 		.4byte	.LASF32
 443 0015 D4010000 		.4byte	.LASF33
 444 0019 00000000 		.4byte	.Ltext0
 445 001d 28010000 		.4byte	.Letext0
 446 0021 00000000 		.4byte	.Ldebug_line0
 447 0025 02       		.uleb128 0x2
 448 0026 01       		.byte	0x1
 449 0027 06       		.byte	0x6
 450 0028 18020000 		.4byte	.LASF0
 451 002c 02       		.uleb128 0x2
 452 002d 01       		.byte	0x1
 453 002e 08       		.byte	0x8
 454 002f 01010000 		.4byte	.LASF1
 455 0033 02       		.uleb128 0x2
 456 0034 02       		.byte	0x2
 457 0035 05       		.byte	0x5
ARM GAS  /tmp/cctrEP4k.s 			page 11


 458 0036 B8010000 		.4byte	.LASF2
 459 003a 02       		.uleb128 0x2
 460 003b 02       		.byte	0x2
 461 003c 07       		.byte	0x7
 462 003d 30010000 		.4byte	.LASF3
 463 0041 02       		.uleb128 0x2
 464 0042 04       		.byte	0x4
 465 0043 05       		.byte	0x5
 466 0044 CB010000 		.4byte	.LASF4
 467 0048 03       		.uleb128 0x3
 468 0049 53010000 		.4byte	.LASF9
 469 004d 02       		.byte	0x2
 470 004e 41       		.byte	0x41
 471 004f 53000000 		.4byte	0x53
 472 0053 02       		.uleb128 0x2
 473 0054 04       		.byte	0x4
 474 0055 07       		.byte	0x7
 475 0056 1E010000 		.4byte	.LASF5
 476 005a 02       		.uleb128 0x2
 477 005b 08       		.byte	0x8
 478 005c 05       		.byte	0x5
 479 005d 9E010000 		.4byte	.LASF6
 480 0061 02       		.uleb128 0x2
 481 0062 08       		.byte	0x8
 482 0063 07       		.byte	0x7
 483 0064 7F010000 		.4byte	.LASF7
 484 0068 04       		.uleb128 0x4
 485 0069 04       		.byte	0x4
 486 006a 05       		.byte	0x5
 487 006b 696E7400 		.ascii	"int\000"
 488 006f 02       		.uleb128 0x2
 489 0070 04       		.byte	0x4
 490 0071 07       		.byte	0x7
 491 0072 72010000 		.4byte	.LASF8
 492 0076 03       		.uleb128 0x3
 493 0077 C2010000 		.4byte	.LASF10
 494 007b 03       		.byte	0x3
 495 007c 30       		.byte	0x30
 496 007d 48000000 		.4byte	0x48
 497 0081 05       		.uleb128 0x5
 498 0082 01       		.byte	0x1
 499 0083 0E000000 		.4byte	.LASF11
 500 0087 01       		.byte	0x1
 501 0088 1D       		.byte	0x1d
 502 0089 01       		.byte	0x1
 503 008a 00000000 		.4byte	.LFB0
 504 008e 18000000 		.4byte	.LFE0
 505 0092 00000000 		.4byte	.LLST0
 506 0096 01       		.byte	0x1
 507 0097 AA000000 		.4byte	0xaa
 508 009b 06       		.uleb128 0x6
 509 009c 08020000 		.4byte	.LASF13
 510 00a0 01       		.byte	0x1
 511 00a1 1D       		.byte	0x1d
 512 00a2 76000000 		.4byte	0x76
 513 00a6 02       		.byte	0x2
 514 00a7 91       		.byte	0x91
ARM GAS  /tmp/cctrEP4k.s 			page 12


 515 00a8 7C       		.sleb128 -4
 516 00a9 00       		.byte	0
 517 00aa 05       		.uleb128 0x5
 518 00ab 01       		.byte	0x1
 519 00ac 1A000000 		.4byte	.LASF12
 520 00b0 01       		.byte	0x1
 521 00b1 23       		.byte	0x23
 522 00b2 01       		.byte	0x1
 523 00b3 18000000 		.4byte	.LFB1
 524 00b7 30000000 		.4byte	.LFE1
 525 00bb 20000000 		.4byte	.LLST1
 526 00bf 01       		.byte	0x1
 527 00c0 D3000000 		.4byte	0xd3
 528 00c4 06       		.uleb128 0x6
 529 00c5 10020000 		.4byte	.LASF14
 530 00c9 01       		.byte	0x1
 531 00ca 23       		.byte	0x23
 532 00cb 76000000 		.4byte	0x76
 533 00cf 02       		.byte	0x2
 534 00d0 91       		.byte	0x91
 535 00d1 7C       		.sleb128 -4
 536 00d2 00       		.byte	0
 537 00d3 05       		.uleb128 0x5
 538 00d4 01       		.byte	0x1
 539 00d5 26000000 		.4byte	.LASF15
 540 00d9 01       		.byte	0x1
 541 00da 29       		.byte	0x29
 542 00db 01       		.byte	0x1
 543 00dc 30000000 		.4byte	.LFB2
 544 00e0 48000000 		.4byte	.LFE2
 545 00e4 40000000 		.4byte	.LLST2
 546 00e8 01       		.byte	0x1
 547 00e9 FC000000 		.4byte	0xfc
 548 00ed 06       		.uleb128 0x6
 549 00ee 96010000 		.4byte	.LASF16
 550 00f2 01       		.byte	0x1
 551 00f3 29       		.byte	0x29
 552 00f4 76000000 		.4byte	0x76
 553 00f8 02       		.byte	0x2
 554 00f9 91       		.byte	0x91
 555 00fa 7C       		.sleb128 -4
 556 00fb 00       		.byte	0
 557 00fc 05       		.uleb128 0x5
 558 00fd 01       		.byte	0x1
 559 00fe 32000000 		.4byte	.LASF17
 560 0102 01       		.byte	0x1
 561 0103 2F       		.byte	0x2f
 562 0104 01       		.byte	0x1
 563 0105 48000000 		.4byte	.LFB3
 564 0109 60000000 		.4byte	.LFE3
 565 010d 60000000 		.4byte	.LLST3
 566 0111 01       		.byte	0x1
 567 0112 25010000 		.4byte	0x125
 568 0116 06       		.uleb128 0x6
 569 0117 24020000 		.4byte	.LASF18
 570 011b 01       		.byte	0x1
 571 011c 2F       		.byte	0x2f
ARM GAS  /tmp/cctrEP4k.s 			page 13


 572 011d 76000000 		.4byte	0x76
 573 0121 02       		.byte	0x2
 574 0122 91       		.byte	0x91
 575 0123 7C       		.sleb128 -4
 576 0124 00       		.byte	0
 577 0125 07       		.uleb128 0x7
 578 0126 01       		.byte	0x1
 579 0127 43010000 		.4byte	.LASF25
 580 012b 01       		.byte	0x1
 581 012c 34       		.byte	0x34
 582 012d 01       		.byte	0x1
 583 012e 60000000 		.4byte	.LFB4
 584 0132 90000000 		.4byte	.LFE4
 585 0136 02       		.byte	0x2
 586 0137 7D       		.byte	0x7d
 587 0138 00       		.sleb128 0
 588 0139 01       		.byte	0x1
 589 013a 08       		.uleb128 0x8
 590 013b 01       		.byte	0x1
 591 013c 45000000 		.4byte	.LASF27
 592 0140 01       		.byte	0x1
 593 0141 3D       		.byte	0x3d
 594 0142 01       		.byte	0x1
 595 0143 76000000 		.4byte	0x76
 596 0147 90000000 		.4byte	.LFB5
 597 014b A0000000 		.4byte	.LFE5
 598 014f 02       		.byte	0x2
 599 0150 7D       		.byte	0x7d
 600 0151 00       		.sleb128 0
 601 0152 01       		.byte	0x1
 602 0153 09       		.uleb128 0x9
 603 0154 01       		.byte	0x1
 604 0155 00000000 		.4byte	.LASF20
 605 0159 01       		.byte	0x1
 606 015a 45       		.byte	0x45
 607 015b 01       		.byte	0x1
 608 015c 76000000 		.4byte	0x76
 609 0160 A0000000 		.4byte	.LFB6
 610 0164 BC000000 		.4byte	.LFE6
 611 0168 80000000 		.4byte	.LLST4
 612 016c 01       		.byte	0x1
 613 016d 80010000 		.4byte	0x180
 614 0171 06       		.uleb128 0x6
 615 0172 70000000 		.4byte	.LASF19
 616 0176 01       		.byte	0x1
 617 0177 45       		.byte	0x45
 618 0178 68000000 		.4byte	0x68
 619 017c 02       		.byte	0x2
 620 017d 91       		.byte	0x91
 621 017e 7C       		.sleb128 -4
 622 017f 00       		.byte	0
 623 0180 09       		.uleb128 0x9
 624 0181 01       		.byte	0x1
 625 0182 5E010000 		.4byte	.LASF21
 626 0186 01       		.byte	0x1
 627 0187 4B       		.byte	0x4b
 628 0188 01       		.byte	0x1
ARM GAS  /tmp/cctrEP4k.s 			page 14


 629 0189 C9010000 		.4byte	0x1c9
 630 018d BC000000 		.4byte	.LFB7
 631 0191 EC000000 		.4byte	.LFE7
 632 0195 A0000000 		.4byte	.LLST5
 633 0199 01       		.byte	0x1
 634 019a C9010000 		.4byte	0x1c9
 635 019e 06       		.uleb128 0x6
 636 019f 70000000 		.4byte	.LASF19
 637 01a3 01       		.byte	0x1
 638 01a4 4B       		.byte	0x4b
 639 01a5 68000000 		.4byte	0x68
 640 01a9 02       		.byte	0x2
 641 01aa 91       		.byte	0x91
 642 01ab 74       		.sleb128 -12
 643 01ac 0A       		.uleb128 0xa
 644 01ad 3E000000 		.4byte	.LASF22
 645 01b1 01       		.byte	0x1
 646 01b2 4D       		.byte	0x4d
 647 01b3 68000000 		.4byte	0x68
 648 01b7 02       		.byte	0x2
 649 01b8 91       		.byte	0x91
 650 01b9 7C       		.sleb128 -4
 651 01ba 0A       		.uleb128 0xa
 652 01bb 0F010000 		.4byte	.LASF23
 653 01bf 01       		.byte	0x1
 654 01c0 4D       		.byte	0x4d
 655 01c1 68000000 		.4byte	0x68
 656 01c5 02       		.byte	0x2
 657 01c6 91       		.byte	0x91
 658 01c7 78       		.sleb128 -8
 659 01c8 00       		.byte	0
 660 01c9 02       		.uleb128 0x2
 661 01ca 01       		.byte	0x1
 662 01cb 02       		.byte	0x2
 663 01cc 2C020000 		.4byte	.LASF24
 664 01d0 07       		.uleb128 0x7
 665 01d1 01       		.byte	0x1
 666 01d2 57000000 		.4byte	.LASF26
 667 01d6 01       		.byte	0x1
 668 01d7 58       		.byte	0x58
 669 01d8 01       		.byte	0x1
 670 01d9 EC000000 		.4byte	.LFB8
 671 01dd 04010000 		.4byte	.LFE8
 672 01e1 02       		.byte	0x2
 673 01e2 7D       		.byte	0x7d
 674 01e3 00       		.sleb128 0
 675 01e4 01       		.byte	0x1
 676 01e5 0B       		.uleb128 0xb
 677 01e6 01       		.byte	0x1
 678 01e7 6D010000 		.4byte	.LASF28
 679 01eb 01       		.byte	0x1
 680 01ec 6A       		.byte	0x6a
 681 01ed 01       		.byte	0x1
 682 01ee 68000000 		.4byte	0x68
 683 01f2 04010000 		.4byte	.LFB9
 684 01f6 28010000 		.4byte	.LFE9
 685 01fa C0000000 		.4byte	.LLST6
ARM GAS  /tmp/cctrEP4k.s 			page 15


 686 01fe 01       		.byte	0x1
 687 01ff 0C       		.uleb128 0xc
 688 0200 75000000 		.4byte	.LASF29
 689 0204 01       		.byte	0x1
 690 0205 14       		.byte	0x14
 691 0206 11020000 		.4byte	0x211
 692 020a 01       		.byte	0x1
 693 020b 05       		.byte	0x5
 694 020c 03       		.byte	0x3
 695 020d 00000000 		.4byte	SW_REGS
 696 0211 0D       		.uleb128 0xd
 697 0212 04       		.byte	0x4
 698 0213 17020000 		.4byte	0x217
 699 0217 0E       		.uleb128 0xe
 700 0218 76000000 		.4byte	0x76
 701 021c 0C       		.uleb128 0xc
 702 021d 4E000000 		.4byte	.LASF30
 703 0221 01       		.byte	0x1
 704 0222 15       		.byte	0x15
 705 0223 11020000 		.4byte	0x211
 706 0227 01       		.byte	0x1
 707 0228 05       		.byte	0x5
 708 0229 03       		.byte	0x3
 709 022a 00000000 		.4byte	OUT_REGS
 710 022e 00       		.byte	0
 711              		.section	.debug_abbrev,"",%progbits
 712              	.Ldebug_abbrev0:
 713 0000 01       		.uleb128 0x1
 714 0001 11       		.uleb128 0x11
 715 0002 01       		.byte	0x1
 716 0003 25       		.uleb128 0x25
 717 0004 0E       		.uleb128 0xe
 718 0005 13       		.uleb128 0x13
 719 0006 0B       		.uleb128 0xb
 720 0007 03       		.uleb128 0x3
 721 0008 0E       		.uleb128 0xe
 722 0009 1B       		.uleb128 0x1b
 723 000a 0E       		.uleb128 0xe
 724 000b 11       		.uleb128 0x11
 725 000c 01       		.uleb128 0x1
 726 000d 12       		.uleb128 0x12
 727 000e 01       		.uleb128 0x1
 728 000f 10       		.uleb128 0x10
 729 0010 06       		.uleb128 0x6
 730 0011 00       		.byte	0
 731 0012 00       		.byte	0
 732 0013 02       		.uleb128 0x2
 733 0014 24       		.uleb128 0x24
 734 0015 00       		.byte	0
 735 0016 0B       		.uleb128 0xb
 736 0017 0B       		.uleb128 0xb
 737 0018 3E       		.uleb128 0x3e
 738 0019 0B       		.uleb128 0xb
 739 001a 03       		.uleb128 0x3
 740 001b 0E       		.uleb128 0xe
 741 001c 00       		.byte	0
 742 001d 00       		.byte	0
ARM GAS  /tmp/cctrEP4k.s 			page 16


 743 001e 03       		.uleb128 0x3
 744 001f 16       		.uleb128 0x16
 745 0020 00       		.byte	0
 746 0021 03       		.uleb128 0x3
 747 0022 0E       		.uleb128 0xe
 748 0023 3A       		.uleb128 0x3a
 749 0024 0B       		.uleb128 0xb
 750 0025 3B       		.uleb128 0x3b
 751 0026 0B       		.uleb128 0xb
 752 0027 49       		.uleb128 0x49
 753 0028 13       		.uleb128 0x13
 754 0029 00       		.byte	0
 755 002a 00       		.byte	0
 756 002b 04       		.uleb128 0x4
 757 002c 24       		.uleb128 0x24
 758 002d 00       		.byte	0
 759 002e 0B       		.uleb128 0xb
 760 002f 0B       		.uleb128 0xb
 761 0030 3E       		.uleb128 0x3e
 762 0031 0B       		.uleb128 0xb
 763 0032 03       		.uleb128 0x3
 764 0033 08       		.uleb128 0x8
 765 0034 00       		.byte	0
 766 0035 00       		.byte	0
 767 0036 05       		.uleb128 0x5
 768 0037 2E       		.uleb128 0x2e
 769 0038 01       		.byte	0x1
 770 0039 3F       		.uleb128 0x3f
 771 003a 0C       		.uleb128 0xc
 772 003b 03       		.uleb128 0x3
 773 003c 0E       		.uleb128 0xe
 774 003d 3A       		.uleb128 0x3a
 775 003e 0B       		.uleb128 0xb
 776 003f 3B       		.uleb128 0x3b
 777 0040 0B       		.uleb128 0xb
 778 0041 27       		.uleb128 0x27
 779 0042 0C       		.uleb128 0xc
 780 0043 11       		.uleb128 0x11
 781 0044 01       		.uleb128 0x1
 782 0045 12       		.uleb128 0x12
 783 0046 01       		.uleb128 0x1
 784 0047 40       		.uleb128 0x40
 785 0048 06       		.uleb128 0x6
 786 0049 9742     		.uleb128 0x2117
 787 004b 0C       		.uleb128 0xc
 788 004c 01       		.uleb128 0x1
 789 004d 13       		.uleb128 0x13
 790 004e 00       		.byte	0
 791 004f 00       		.byte	0
 792 0050 06       		.uleb128 0x6
 793 0051 05       		.uleb128 0x5
 794 0052 00       		.byte	0
 795 0053 03       		.uleb128 0x3
 796 0054 0E       		.uleb128 0xe
 797 0055 3A       		.uleb128 0x3a
 798 0056 0B       		.uleb128 0xb
 799 0057 3B       		.uleb128 0x3b
ARM GAS  /tmp/cctrEP4k.s 			page 17


 800 0058 0B       		.uleb128 0xb
 801 0059 49       		.uleb128 0x49
 802 005a 13       		.uleb128 0x13
 803 005b 02       		.uleb128 0x2
 804 005c 0A       		.uleb128 0xa
 805 005d 00       		.byte	0
 806 005e 00       		.byte	0
 807 005f 07       		.uleb128 0x7
 808 0060 2E       		.uleb128 0x2e
 809 0061 00       		.byte	0
 810 0062 3F       		.uleb128 0x3f
 811 0063 0C       		.uleb128 0xc
 812 0064 03       		.uleb128 0x3
 813 0065 0E       		.uleb128 0xe
 814 0066 3A       		.uleb128 0x3a
 815 0067 0B       		.uleb128 0xb
 816 0068 3B       		.uleb128 0x3b
 817 0069 0B       		.uleb128 0xb
 818 006a 27       		.uleb128 0x27
 819 006b 0C       		.uleb128 0xc
 820 006c 11       		.uleb128 0x11
 821 006d 01       		.uleb128 0x1
 822 006e 12       		.uleb128 0x12
 823 006f 01       		.uleb128 0x1
 824 0070 40       		.uleb128 0x40
 825 0071 0A       		.uleb128 0xa
 826 0072 9742     		.uleb128 0x2117
 827 0074 0C       		.uleb128 0xc
 828 0075 00       		.byte	0
 829 0076 00       		.byte	0
 830 0077 08       		.uleb128 0x8
 831 0078 2E       		.uleb128 0x2e
 832 0079 00       		.byte	0
 833 007a 3F       		.uleb128 0x3f
 834 007b 0C       		.uleb128 0xc
 835 007c 03       		.uleb128 0x3
 836 007d 0E       		.uleb128 0xe
 837 007e 3A       		.uleb128 0x3a
 838 007f 0B       		.uleb128 0xb
 839 0080 3B       		.uleb128 0x3b
 840 0081 0B       		.uleb128 0xb
 841 0082 27       		.uleb128 0x27
 842 0083 0C       		.uleb128 0xc
 843 0084 49       		.uleb128 0x49
 844 0085 13       		.uleb128 0x13
 845 0086 11       		.uleb128 0x11
 846 0087 01       		.uleb128 0x1
 847 0088 12       		.uleb128 0x12
 848 0089 01       		.uleb128 0x1
 849 008a 40       		.uleb128 0x40
 850 008b 0A       		.uleb128 0xa
 851 008c 9742     		.uleb128 0x2117
 852 008e 0C       		.uleb128 0xc
 853 008f 00       		.byte	0
 854 0090 00       		.byte	0
 855 0091 09       		.uleb128 0x9
 856 0092 2E       		.uleb128 0x2e
ARM GAS  /tmp/cctrEP4k.s 			page 18


 857 0093 01       		.byte	0x1
 858 0094 3F       		.uleb128 0x3f
 859 0095 0C       		.uleb128 0xc
 860 0096 03       		.uleb128 0x3
 861 0097 0E       		.uleb128 0xe
 862 0098 3A       		.uleb128 0x3a
 863 0099 0B       		.uleb128 0xb
 864 009a 3B       		.uleb128 0x3b
 865 009b 0B       		.uleb128 0xb
 866 009c 27       		.uleb128 0x27
 867 009d 0C       		.uleb128 0xc
 868 009e 49       		.uleb128 0x49
 869 009f 13       		.uleb128 0x13
 870 00a0 11       		.uleb128 0x11
 871 00a1 01       		.uleb128 0x1
 872 00a2 12       		.uleb128 0x12
 873 00a3 01       		.uleb128 0x1
 874 00a4 40       		.uleb128 0x40
 875 00a5 06       		.uleb128 0x6
 876 00a6 9742     		.uleb128 0x2117
 877 00a8 0C       		.uleb128 0xc
 878 00a9 01       		.uleb128 0x1
 879 00aa 13       		.uleb128 0x13
 880 00ab 00       		.byte	0
 881 00ac 00       		.byte	0
 882 00ad 0A       		.uleb128 0xa
 883 00ae 34       		.uleb128 0x34
 884 00af 00       		.byte	0
 885 00b0 03       		.uleb128 0x3
 886 00b1 0E       		.uleb128 0xe
 887 00b2 3A       		.uleb128 0x3a
 888 00b3 0B       		.uleb128 0xb
 889 00b4 3B       		.uleb128 0x3b
 890 00b5 0B       		.uleb128 0xb
 891 00b6 49       		.uleb128 0x49
 892 00b7 13       		.uleb128 0x13
 893 00b8 02       		.uleb128 0x2
 894 00b9 0A       		.uleb128 0xa
 895 00ba 00       		.byte	0
 896 00bb 00       		.byte	0
 897 00bc 0B       		.uleb128 0xb
 898 00bd 2E       		.uleb128 0x2e
 899 00be 00       		.byte	0
 900 00bf 3F       		.uleb128 0x3f
 901 00c0 0C       		.uleb128 0xc
 902 00c1 03       		.uleb128 0x3
 903 00c2 0E       		.uleb128 0xe
 904 00c3 3A       		.uleb128 0x3a
 905 00c4 0B       		.uleb128 0xb
 906 00c5 3B       		.uleb128 0x3b
 907 00c6 0B       		.uleb128 0xb
 908 00c7 27       		.uleb128 0x27
 909 00c8 0C       		.uleb128 0xc
 910 00c9 49       		.uleb128 0x49
 911 00ca 13       		.uleb128 0x13
 912 00cb 11       		.uleb128 0x11
 913 00cc 01       		.uleb128 0x1
ARM GAS  /tmp/cctrEP4k.s 			page 19


 914 00cd 12       		.uleb128 0x12
 915 00ce 01       		.uleb128 0x1
 916 00cf 40       		.uleb128 0x40
 917 00d0 06       		.uleb128 0x6
 918 00d1 9642     		.uleb128 0x2116
 919 00d3 0C       		.uleb128 0xc
 920 00d4 00       		.byte	0
 921 00d5 00       		.byte	0
 922 00d6 0C       		.uleb128 0xc
 923 00d7 34       		.uleb128 0x34
 924 00d8 00       		.byte	0
 925 00d9 03       		.uleb128 0x3
 926 00da 0E       		.uleb128 0xe
 927 00db 3A       		.uleb128 0x3a
 928 00dc 0B       		.uleb128 0xb
 929 00dd 3B       		.uleb128 0x3b
 930 00de 0B       		.uleb128 0xb
 931 00df 49       		.uleb128 0x49
 932 00e0 13       		.uleb128 0x13
 933 00e1 3F       		.uleb128 0x3f
 934 00e2 0C       		.uleb128 0xc
 935 00e3 02       		.uleb128 0x2
 936 00e4 0A       		.uleb128 0xa
 937 00e5 00       		.byte	0
 938 00e6 00       		.byte	0
 939 00e7 0D       		.uleb128 0xd
 940 00e8 0F       		.uleb128 0xf
 941 00e9 00       		.byte	0
 942 00ea 0B       		.uleb128 0xb
 943 00eb 0B       		.uleb128 0xb
 944 00ec 49       		.uleb128 0x49
 945 00ed 13       		.uleb128 0x13
 946 00ee 00       		.byte	0
 947 00ef 00       		.byte	0
 948 00f0 0E       		.uleb128 0xe
 949 00f1 35       		.uleb128 0x35
 950 00f2 00       		.byte	0
 951 00f3 49       		.uleb128 0x49
 952 00f4 13       		.uleb128 0x13
 953 00f5 00       		.byte	0
 954 00f6 00       		.byte	0
 955 00f7 00       		.byte	0
 956              		.section	.debug_loc,"",%progbits
 957              	.Ldebug_loc0:
 958              	.LLST0:
 959 0000 00000000 		.4byte	.LFB0-.Ltext0
 960 0004 02000000 		.4byte	.LCFI0-.Ltext0
 961 0008 0200     		.2byte	0x2
 962 000a 7D       		.byte	0x7d
 963 000b 00       		.sleb128 0
 964 000c 02000000 		.4byte	.LCFI0-.Ltext0
 965 0010 18000000 		.4byte	.LFE0-.Ltext0
 966 0014 0200     		.2byte	0x2
 967 0016 7D       		.byte	0x7d
 968 0017 08       		.sleb128 8
 969 0018 00000000 		.4byte	0
 970 001c 00000000 		.4byte	0
ARM GAS  /tmp/cctrEP4k.s 			page 20


 971              	.LLST1:
 972 0020 18000000 		.4byte	.LFB1-.Ltext0
 973 0024 1A000000 		.4byte	.LCFI1-.Ltext0
 974 0028 0200     		.2byte	0x2
 975 002a 7D       		.byte	0x7d
 976 002b 00       		.sleb128 0
 977 002c 1A000000 		.4byte	.LCFI1-.Ltext0
 978 0030 30000000 		.4byte	.LFE1-.Ltext0
 979 0034 0200     		.2byte	0x2
 980 0036 7D       		.byte	0x7d
 981 0037 08       		.sleb128 8
 982 0038 00000000 		.4byte	0
 983 003c 00000000 		.4byte	0
 984              	.LLST2:
 985 0040 30000000 		.4byte	.LFB2-.Ltext0
 986 0044 32000000 		.4byte	.LCFI2-.Ltext0
 987 0048 0200     		.2byte	0x2
 988 004a 7D       		.byte	0x7d
 989 004b 00       		.sleb128 0
 990 004c 32000000 		.4byte	.LCFI2-.Ltext0
 991 0050 48000000 		.4byte	.LFE2-.Ltext0
 992 0054 0200     		.2byte	0x2
 993 0056 7D       		.byte	0x7d
 994 0057 08       		.sleb128 8
 995 0058 00000000 		.4byte	0
 996 005c 00000000 		.4byte	0
 997              	.LLST3:
 998 0060 48000000 		.4byte	.LFB3-.Ltext0
 999 0064 4A000000 		.4byte	.LCFI3-.Ltext0
 1000 0068 0200     		.2byte	0x2
 1001 006a 7D       		.byte	0x7d
 1002 006b 00       		.sleb128 0
 1003 006c 4A000000 		.4byte	.LCFI3-.Ltext0
 1004 0070 60000000 		.4byte	.LFE3-.Ltext0
 1005 0074 0200     		.2byte	0x2
 1006 0076 7D       		.byte	0x7d
 1007 0077 08       		.sleb128 8
 1008 0078 00000000 		.4byte	0
 1009 007c 00000000 		.4byte	0
 1010              	.LLST4:
 1011 0080 A0000000 		.4byte	.LFB6-.Ltext0
 1012 0084 A2000000 		.4byte	.LCFI4-.Ltext0
 1013 0088 0200     		.2byte	0x2
 1014 008a 7D       		.byte	0x7d
 1015 008b 00       		.sleb128 0
 1016 008c A2000000 		.4byte	.LCFI4-.Ltext0
 1017 0090 BC000000 		.4byte	.LFE6-.Ltext0
 1018 0094 0200     		.2byte	0x2
 1019 0096 7D       		.byte	0x7d
 1020 0097 08       		.sleb128 8
 1021 0098 00000000 		.4byte	0
 1022 009c 00000000 		.4byte	0
 1023              	.LLST5:
 1024 00a0 BC000000 		.4byte	.LFB7-.Ltext0
 1025 00a4 BE000000 		.4byte	.LCFI5-.Ltext0
 1026 00a8 0200     		.2byte	0x2
 1027 00aa 7D       		.byte	0x7d
ARM GAS  /tmp/cctrEP4k.s 			page 21


 1028 00ab 00       		.sleb128 0
 1029 00ac BE000000 		.4byte	.LCFI5-.Ltext0
 1030 00b0 EC000000 		.4byte	.LFE7-.Ltext0
 1031 00b4 0200     		.2byte	0x2
 1032 00b6 7D       		.byte	0x7d
 1033 00b7 10       		.sleb128 16
 1034 00b8 00000000 		.4byte	0
 1035 00bc 00000000 		.4byte	0
 1036              	.LLST6:
 1037 00c0 04010000 		.4byte	.LFB9-.Ltext0
 1038 00c4 06010000 		.4byte	.LCFI6-.Ltext0
 1039 00c8 0200     		.2byte	0x2
 1040 00ca 7D       		.byte	0x7d
 1041 00cb 00       		.sleb128 0
 1042 00cc 06010000 		.4byte	.LCFI6-.Ltext0
 1043 00d0 28010000 		.4byte	.LFE9-.Ltext0
 1044 00d4 0200     		.2byte	0x2
 1045 00d6 7D       		.byte	0x7d
 1046 00d7 08       		.sleb128 8
 1047 00d8 00000000 		.4byte	0
 1048 00dc 00000000 		.4byte	0
 1049              		.section	.debug_aranges,"",%progbits
 1050 0000 1C000000 		.4byte	0x1c
 1051 0004 0200     		.2byte	0x2
 1052 0006 00000000 		.4byte	.Ldebug_info0
 1053 000a 04       		.byte	0x4
 1054 000b 00       		.byte	0
 1055 000c 0000     		.2byte	0
 1056 000e 0000     		.2byte	0
 1057 0010 00000000 		.4byte	.Ltext0
 1058 0014 28010000 		.4byte	.Letext0-.Ltext0
 1059 0018 00000000 		.4byte	0
 1060 001c 00000000 		.4byte	0
 1061              		.section	.debug_line,"",%progbits
 1062              	.Ldebug_line0:
 1063 0000 15010000 		.section	.debug_str,"MS",%progbits,1
 1063      0200BF00 
 1063      00000201 
 1063      FB0E0D00 
 1063      01010101 
 1064              	.LASF20:
 1065 0000 72656164 		.ascii	"read_switches\000"
 1065      5F737769 
 1065      74636865 
 1065      7300
 1066              	.LASF11:
 1067 000e 77726974 		.ascii	"write_out_0\000"
 1067      655F6F75 
 1067      745F3000 
 1068              	.LASF12:
 1069 001a 77726974 		.ascii	"write_out_1\000"
 1069      655F6F75 
 1069      745F3100 
 1070              	.LASF15:
 1071 0026 77726974 		.ascii	"write_out_2\000"
 1071      655F6F75 
 1071      745F3200 
ARM GAS  /tmp/cctrEP4k.s 			page 22


 1072              	.LASF17:
 1073 0032 77726974 		.ascii	"write_out_3\000"
 1073      655F6F75 
 1073      745F3300 
 1074              	.LASF22:
 1075 003e 73746174 		.ascii	"status\000"
 1075      757300
 1076              	.LASF27:
 1077 0045 72656164 		.ascii	"read_out\000"
 1077      5F6F7574 
 1077      00
 1078              	.LASF30:
 1079 004e 4F55545F 		.ascii	"OUT_REGS\000"
 1079      52454753 
 1079      00
 1080              	.LASF26:
 1081 0057 77616974 		.ascii	"wait_for_any_switch_data\000"
 1081      5F666F72 
 1081      5F616E79 
 1081      5F737769 
 1081      7463685F 
 1082              	.LASF19:
 1083 0070 61646472 		.ascii	"addr\000"
 1083      00
 1084              	.LASF29:
 1085 0075 53575F52 		.ascii	"SW_REGS\000"
 1085      45475300 
 1086              	.LASF31:
 1087 007d 474E5520 		.ascii	"GNU C11 5.4.1 20160919 (release) [ARM/embedded-5-br"
 1087      43313120 
 1087      352E342E 
 1087      31203230 
 1087      31363039 
 1088 00b0 616E6368 		.ascii	"anch revision 240496] -mcpu=cortex-m0 -mthumb -gdwa"
 1088      20726576 
 1088      6973696F 
 1088      6E203234 
 1088      30343936 
 1089 00e3 72662D32 		.ascii	"rf-2 -O0 -fomit-frame-pointer\000"
 1089      202D4F30 
 1089      202D666F 
 1089      6D69742D 
 1089      6672616D 
 1090              	.LASF1:
 1091 0101 756E7369 		.ascii	"unsigned char\000"
 1091      676E6564 
 1091      20636861 
 1091      7200
 1092              	.LASF23:
 1093 010f 73776974 		.ascii	"switches_ready\000"
 1093      63686573 
 1093      5F726561 
 1093      647900
 1094              	.LASF5:
 1095 011e 6C6F6E67 		.ascii	"long unsigned int\000"
 1095      20756E73 
 1095      69676E65 
ARM GAS  /tmp/cctrEP4k.s 			page 23


 1095      6420696E 
 1095      7400
 1096              	.LASF3:
 1097 0130 73686F72 		.ascii	"short unsigned int\000"
 1097      7420756E 
 1097      7369676E 
 1097      65642069 
 1097      6E7400
 1098              	.LASF25:
 1099 0143 7365745F 		.ascii	"set_out_invalid\000"
 1099      6F75745F 
 1099      696E7661 
 1099      6C696400 
 1100              	.LASF9:
 1101 0153 5F5F7569 		.ascii	"__uint32_t\000"
 1101      6E743332 
 1101      5F7400
 1102              	.LASF21:
 1103 015e 63686563 		.ascii	"check_switches\000"
 1103      6B5F7377 
 1103      69746368 
 1103      657300
 1104              	.LASF28:
 1105 016d 6D61696E 		.ascii	"main\000"
 1105      00
 1106              	.LASF8:
 1107 0172 756E7369 		.ascii	"unsigned int\000"
 1107      676E6564 
 1107      20696E74 
 1107      00
 1108              	.LASF7:
 1109 017f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1109      206C6F6E 
 1109      6720756E 
 1109      7369676E 
 1109      65642069 
 1110              	.LASF16:
 1111 0196 76616C75 		.ascii	"value_2\000"
 1111      655F3200 
 1112              	.LASF6:
 1113 019e 6C6F6E67 		.ascii	"long long int\000"
 1113      206C6F6E 
 1113      6720696E 
 1113      7400
 1114              	.LASF32:
 1115 01ac 636F6465 		.ascii	"code/main.c\000"
 1115      2F6D6169 
 1115      6E2E6300 
 1116              	.LASF2:
 1117 01b8 73686F72 		.ascii	"short int\000"
 1117      7420696E 
 1117      7400
 1118              	.LASF10:
 1119 01c2 75696E74 		.ascii	"uint32_t\000"
 1119      33325F74 
 1119      00
 1120              	.LASF4:
ARM GAS  /tmp/cctrEP4k.s 			page 24


 1121 01cb 6C6F6E67 		.ascii	"long int\000"
 1121      20696E74 
 1121      00
 1122              	.LASF33:
 1123 01d4 2F686F6D 		.ascii	"/home/ks6n19/design/system_on_chip/example/software"
 1123      652F6B73 
 1123      366E3139 
 1123      2F646573 
 1123      69676E2F 
 1124 0207 00       		.ascii	"\000"
 1125              	.LASF13:
 1126 0208 76616C75 		.ascii	"value_0\000"
 1126      655F3000 
 1127              	.LASF14:
 1128 0210 76616C75 		.ascii	"value_1\000"
 1128      655F3100 
 1129              	.LASF0:
 1130 0218 7369676E 		.ascii	"signed char\000"
 1130      65642063 
 1130      68617200 
 1131              	.LASF18:
 1132 0224 76616C75 		.ascii	"value_3\000"
 1132      655F3300 
 1133              	.LASF24:
 1134 022c 5F426F6F 		.ascii	"_Bool\000"
 1134      6C00
 1135              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cctrEP4k.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cctrEP4k.s:57     .data:00000000 SW_REGS
     /tmp/cctrEP4k.s:54     .data:00000000 $d
     /tmp/cctrEP4k.s:63     .data:00000004 OUT_REGS
     /tmp/cctrEP4k.s:66     .text:00000000 $t
     /tmp/cctrEP4k.s:71     .text:00000000 write_out_0
     /tmp/cctrEP4k.s:96     .text:00000014 $d
     /tmp/cctrEP4k.s:100    .text:00000018 $t
     /tmp/cctrEP4k.s:105    .text:00000018 write_out_1
     /tmp/cctrEP4k.s:130    .text:0000002c $d
     /tmp/cctrEP4k.s:134    .text:00000030 $t
     /tmp/cctrEP4k.s:139    .text:00000030 write_out_2
     /tmp/cctrEP4k.s:164    .text:00000044 $d
     /tmp/cctrEP4k.s:168    .text:00000048 $t
     /tmp/cctrEP4k.s:173    .text:00000048 write_out_3
     /tmp/cctrEP4k.s:198    .text:0000005c $d
     /tmp/cctrEP4k.s:202    .text:00000060 $t
     /tmp/cctrEP4k.s:207    .text:00000060 set_out_invalid
     /tmp/cctrEP4k.s:244    .text:0000008c $d
     /tmp/cctrEP4k.s:248    .text:00000090 $t
     /tmp/cctrEP4k.s:253    .text:00000090 read_out
     /tmp/cctrEP4k.s:271    .text:0000009c $d
     /tmp/cctrEP4k.s:275    .text:000000a0 $t
     /tmp/cctrEP4k.s:280    .text:000000a0 read_switches
     /tmp/cctrEP4k.s:306    .text:000000b8 $d
     /tmp/cctrEP4k.s:310    .text:000000bc $t
     /tmp/cctrEP4k.s:315    .text:000000bc check_switches
     /tmp/cctrEP4k.s:354    .text:000000e8 $d
     /tmp/cctrEP4k.s:358    .text:000000ec $t
     /tmp/cctrEP4k.s:363    .text:000000ec wait_for_any_switch_data
     /tmp/cctrEP4k.s:388    .text:00000100 $d
     /tmp/cctrEP4k.s:392    .text:00000104 $t
     /tmp/cctrEP4k.s:397    .text:00000104 main
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
